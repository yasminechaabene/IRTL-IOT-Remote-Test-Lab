{"ast":null,"code":"'use strict';\n\nvar MongoNetworkError = require('./core').MongoNetworkError;\n\nvar mongoErrorContextSymbol = require('./core').mongoErrorContextSymbol;\n\nvar GET_MORE_NON_RESUMABLE_CODES = new Set([136, // CappedPositionLost\n237, // CursorKilled\n11601 // Interrupted\n]); // From spec@https://github.com/mongodb/specifications/blob/7a2e93d85935ee4b1046a8d2ad3514c657dc74fa/source/change-streams/change-streams.rst#resumable-error:\n//\n// An error is considered resumable if it meets any of the following criteria:\n// - any error encountered which is not a server error (e.g. a timeout error or network error)\n// - any server error response from a getMore command excluding those containing the error label\n//   NonRetryableChangeStreamError and those containing the following error codes:\n//   - Interrupted: 11601\n//   - CappedPositionLost: 136\n//   - CursorKilled: 237\n//\n// An error on an aggregate command is not a resumable error. Only errors on a getMore command may be considered resumable errors.\n\nfunction isGetMoreError(error) {\n  if (error[mongoErrorContextSymbol]) {\n    return error[mongoErrorContextSymbol].isGetMore;\n  }\n}\n\nfunction isResumableError(error) {\n  if (!isGetMoreError(error)) {\n    return false;\n  }\n\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n\n  return !(GET_MORE_NON_RESUMABLE_CODES.has(error.code) || error.hasErrorLabel('NonRetryableChangeStreamError'));\n}\n\nmodule.exports = {\n  GET_MORE_NON_RESUMABLE_CODES: GET_MORE_NON_RESUMABLE_CODES,\n  isResumableError: isResumableError\n};","map":null,"metadata":{},"sourceType":"script"}