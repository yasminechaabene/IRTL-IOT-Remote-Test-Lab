{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Topology = require('../core').Topology;\n\nvar ServerCapabilities = require('./topology_base').ServerCapabilities;\n\nvar Cursor = require('../cursor');\n\nvar translateOptions = require('../utils').translateOptions;\n\nvar NativeTopology = /*#__PURE__*/function (_Topology) {\n  _inherits(NativeTopology, _Topology);\n\n  function NativeTopology(servers, options) {\n    _classCallCheck(this, NativeTopology);\n\n    options = options || {};\n    var clonedOptions = Object.assign({}, {\n      cursorFactory: Cursor,\n      reconnect: false,\n      emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n      maxPoolSize: typeof options.poolSize === 'number' ? options.poolSize : 5,\n      minPoolSize: typeof options.minSize === 'number' ? options.minSize : 0,\n      monitorCommands: typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n    }); // Translate any SSL options and other connectivity options\n\n    clonedOptions = translateOptions(clonedOptions, options); // Socket options\n\n    var socketOptions = options.socketOptions && Object.keys(options.socketOptions).length > 0 ? options.socketOptions : options; // Translate all the options to the core types\n\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n    return _possibleConstructorReturn(this, _getPrototypeOf(NativeTopology).call(this, servers, clonedOptions));\n  }\n\n  _createClass(NativeTopology, [{\n    key: \"capabilities\",\n    value: function capabilities() {\n      if (this.s.sCapabilities) return this.s.sCapabilities;\n      if (this.lastIsMaster() == null) return null;\n      this.s.sCapabilities = new ServerCapabilities(this.lastIsMaster());\n      return this.s.sCapabilities;\n    } // Command\n\n  }, {\n    key: \"command\",\n    value: function command(ns, cmd, options, callback) {\n      _get(_getPrototypeOf(NativeTopology.prototype), \"command\", this).call(this, ns.toString(), cmd, options, callback);\n    } // Insert\n\n  }, {\n    key: \"insert\",\n    value: function insert(ns, ops, options, callback) {\n      _get(_getPrototypeOf(NativeTopology.prototype), \"insert\", this).call(this, ns.toString(), ops, options, callback);\n    } // Update\n\n  }, {\n    key: \"update\",\n    value: function update(ns, ops, options, callback) {\n      _get(_getPrototypeOf(NativeTopology.prototype), \"update\", this).call(this, ns.toString(), ops, options, callback);\n    } // Remove\n\n  }, {\n    key: \"remove\",\n    value: function remove(ns, ops, options, callback) {\n      _get(_getPrototypeOf(NativeTopology.prototype), \"remove\", this).call(this, ns.toString(), ops, options, callback);\n    }\n  }]);\n\n  return NativeTopology;\n}(Topology);\n\nmodule.exports = NativeTopology;","map":null,"metadata":{},"sourceType":"script"}