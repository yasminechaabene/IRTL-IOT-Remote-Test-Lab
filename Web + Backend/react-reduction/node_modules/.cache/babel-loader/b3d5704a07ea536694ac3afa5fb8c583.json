{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar resolveReadPreference = require('../utils').resolveReadPreference;\n\nvar ReadConcern = require('../read_concern');\n\nvar WriteConcern = require('../write_concern');\n\nvar maxWireVersion = require('../core/utils').maxWireVersion;\n\nvar commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\n\nvar MongoError = require('../error').MongoError;\n\nvar SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\nvar CommandOperationV2 = /*#__PURE__*/function (_OperationBase) {\n  _inherits(CommandOperationV2, _OperationBase);\n\n  function CommandOperationV2(parent, options, operationOptions) {\n    var _this;\n\n    _classCallCheck(this, CommandOperationV2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommandOperationV2).call(this, options));\n    _this.ns = parent.s.namespace.withCollection('$cmd');\n    _this.readPreference = resolveReadPreference(parent, _this.options);\n    _this.readConcern = resolveReadConcern(parent, _this.options);\n    _this.writeConcern = resolveWriteConcern(parent, _this.options);\n    _this.explain = false;\n\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\n      _this.fullResponse = true;\n    } // TODO: A lot of our code depends on having the read preference in the options. This should\n    //       go away, but also requires massive test rewrites.\n\n\n    _this.options.readPreference = _this.readPreference; // TODO(NODE-2056): make logger another \"inheritable\" property\n\n    if (parent.s.logger) {\n      _this.logger = parent.s.logger;\n    } else if (parent.s.db && parent.s.db.logger) {\n      _this.logger = parent.s.db.logger;\n    }\n\n    return _this;\n  }\n\n  _createClass(CommandOperationV2, [{\n    key: \"executeCommand\",\n    value: function executeCommand(server, cmd, callback) {\n      var _this2 = this;\n\n      // TODO: consider making this a non-enumerable property\n      this.server = server;\n      var options = this.options;\n      var serverWireVersion = maxWireVersion(server);\n      var inTransaction = this.session && this.session.inTransaction();\n\n      if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n        Object.assign(cmd, {\n          readConcern: this.readConcern\n        });\n      }\n\n      if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        callback(new MongoError(\"Server \".concat(server.name, \", which reports wire version \").concat(serverWireVersion, \", does not support collation\")));\n        return;\n      }\n\n      if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n        if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\n          Object.assign(cmd, {\n            writeConcern: this.writeConcern\n          });\n        }\n\n        if (options.collation && typeof options.collation === 'object') {\n          Object.assign(cmd, {\n            collation: options.collation\n          });\n        }\n      }\n\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      }\n\n      if (typeof options.comment === 'string') {\n        cmd.comment = options.comment;\n      }\n\n      if (this.logger && this.logger.isDebug()) {\n        this.logger.debug(\"executing command \".concat(JSON.stringify(cmd), \" against \").concat(this.ns));\n      }\n\n      server.command(this.ns.toString(), cmd, this.options, function (err, result) {\n        if (err) {\n          callback(err, null);\n          return;\n        }\n\n        if (_this2.fullResponse) {\n          callback(null, result);\n          return;\n        }\n\n        callback(null, result.result);\n      });\n    }\n  }]);\n\n  return CommandOperationV2;\n}(OperationBase);\n\nfunction resolveWriteConcern(parent, options) {\n  return WriteConcern.fromOptions(options) || parent.writeConcern;\n}\n\nfunction resolveReadConcern(parent, options) {\n  return ReadConcern.fromOptions(options) || parent.readConcern;\n}\n\nmodule.exports = CommandOperationV2;","map":null,"metadata":{},"sourceType":"script"}