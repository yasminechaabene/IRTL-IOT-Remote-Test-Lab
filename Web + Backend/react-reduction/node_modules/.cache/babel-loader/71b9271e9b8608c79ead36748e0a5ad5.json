{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Aspect = require('./operation').Aspect;\n\nvar CommandOperation = require('./command');\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar crypto = require('crypto');\n\nvar handleCallback = require('../utils').handleCallback;\n\nvar toError = require('../utils').toError;\n\nvar AddUserOperation = /*#__PURE__*/function (_CommandOperation) {\n  _inherits(AddUserOperation, _CommandOperation);\n\n  function AddUserOperation(db, username, password, options) {\n    var _this;\n\n    _classCallCheck(this, AddUserOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddUserOperation).call(this, db, options));\n    _this.username = username;\n    _this.password = password;\n    return _this;\n  }\n\n  _createClass(AddUserOperation, [{\n    key: \"_buildCommand\",\n    value: function _buildCommand() {\n      var db = this.db;\n      var username = this.username;\n      var password = this.password;\n      var options = this.options; // Get additional values\n\n      var roles = Array.isArray(options.roles) ? options.roles : []; // If not roles defined print deprecated message\n      // TODO: handle deprecation properly\n\n      if (roles.length === 0) {\n        console.log('Creating a user without roles is deprecated in MongoDB >= 2.6');\n      } // Check the db name and add roles if needed\n\n\n      if ((db.databaseName.toLowerCase() === 'admin' || options.dbName === 'admin') && !Array.isArray(options.roles)) {\n        roles = ['root'];\n      } else if (!Array.isArray(options.roles)) {\n        roles = ['dbOwner'];\n      }\n\n      var digestPassword = db.s.topology.lastIsMaster().maxWireVersion >= 7;\n      var userPassword = password;\n\n      if (!digestPassword) {\n        // Use node md5 generator\n        var md5 = crypto.createHash('md5'); // Generate keys used for authentication\n\n        md5.update(username + ':mongo:' + password);\n        userPassword = md5.digest('hex');\n      } // Build the command to execute\n\n\n      var command = {\n        createUser: username,\n        customData: options.customData || {},\n        roles: roles,\n        digestPassword: digestPassword\n      }; // No password\n\n      if (typeof password === 'string') {\n        command.pwd = userPassword;\n      }\n\n      return command;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute(callback) {\n      var options = this.options; // Error out if digestPassword set\n\n      if (options.digestPassword != null) {\n        return callback(toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\"));\n      } // Attempt to execute auth command\n\n\n      _get(_getPrototypeOf(AddUserOperation.prototype), \"execute\", this).call(this, function (err, r) {\n        if (!err) {\n          return handleCallback(callback, err, r);\n        }\n\n        return handleCallback(callback, err, null);\n      });\n    }\n  }]);\n\n  return AddUserOperation;\n}(CommandOperation);\n\ndefineAspects(AddUserOperation, Aspect.WRITE_OPERATION);\nmodule.exports = AddUserOperation;","map":null,"metadata":{},"sourceType":"script"}