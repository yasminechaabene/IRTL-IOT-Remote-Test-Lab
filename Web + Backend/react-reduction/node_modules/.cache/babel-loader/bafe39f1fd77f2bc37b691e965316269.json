{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar AuthProvider = require('./auth_provider').AuthProvider;\n\nvar retrieveKerberos = require('../utils').retrieveKerberos;\n\nvar kerberos;\n/**\n * Creates a new SSPI authentication mechanism\n * @class\n * @extends AuthProvider\n */\n\nvar SSPI = /*#__PURE__*/function (_AuthProvider) {\n  _inherits(SSPI, _AuthProvider);\n\n  function SSPI() {\n    _classCallCheck(this, SSPI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SSPI).apply(this, arguments));\n  }\n\n  _createClass(SSPI, [{\n    key: \"_authenticateSingleConnection\",\n\n    /**\n     * Implementation of authentication for a single connection\n     * @override\n     */\n    value: function _authenticateSingleConnection(sendAuthCommand, connection, credentials, callback) {\n      // TODO: Destructure this\n      var username = credentials.username;\n      var password = credentials.password;\n      var mechanismProperties = credentials.mechanismProperties;\n      var gssapiServiceName = mechanismProperties['gssapiservicename'] || mechanismProperties['gssapiServiceName'] || 'mongodb';\n      SSIPAuthenticate(this, kerberos.processes.MongoAuthProcess, username, password, gssapiServiceName, sendAuthCommand, connection, mechanismProperties, callback);\n    }\n    /**\n     * Authenticate\n     * @override\n     * @method\n     */\n\n  }, {\n    key: \"auth\",\n    value: function auth(sendAuthCommand, connections, credentials, callback) {\n      if (kerberos == null) {\n        try {\n          kerberos = retrieveKerberos();\n        } catch (e) {\n          return callback(e, null);\n        }\n      }\n\n      _get(_getPrototypeOf(SSPI.prototype), \"auth\", this).call(this, sendAuthCommand, connections, credentials, callback);\n    }\n  }]);\n\n  return SSPI;\n}(AuthProvider);\n\nfunction SSIPAuthenticate(self, MongoAuthProcess, username, password, gssapiServiceName, sendAuthCommand, connection, options, callback) {\n  var authProcess = new MongoAuthProcess(connection.host, connection.port, gssapiServiceName, options);\n\n  function authCommand(command, authCb) {\n    sendAuthCommand(connection, '$external.$cmd', command, authCb);\n  }\n\n  authProcess.init(username, password, function (err) {\n    if (err) return callback(err, false);\n    authProcess.transition('', function (err, payload) {\n      if (err) return callback(err, false);\n      var command = {\n        saslStart: 1,\n        mechanism: 'GSSAPI',\n        payload: payload,\n        autoAuthorize: 1\n      };\n      authCommand(command, function (err, doc) {\n        if (err) return callback(err, false);\n        authProcess.transition(doc.payload, function (err, payload) {\n          if (err) return callback(err, false);\n          var command = {\n            saslContinue: 1,\n            conversationId: doc.conversationId,\n            payload: payload\n          };\n          authCommand(command, function (err, doc) {\n            if (err) return callback(err, false);\n            authProcess.transition(doc.payload, function (err, payload) {\n              if (err) return callback(err, false);\n              var command = {\n                saslContinue: 1,\n                conversationId: doc.conversationId,\n                payload: payload\n              };\n              authCommand(command, function (err, response) {\n                if (err) return callback(err, false);\n                authProcess.transition(null, function (err) {\n                  if (err) return callback(err, null);\n                  callback(null, response);\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nmodule.exports = SSPI;","map":null,"metadata":{},"sourceType":"script"}