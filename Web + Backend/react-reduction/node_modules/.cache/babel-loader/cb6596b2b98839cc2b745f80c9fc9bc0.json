{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar parseServerType = require('../core/sdam/server_description').parseServerType;\n\nvar RESPONSE_FIELDS = ['minWireVersion', 'maxWireVersion', 'maxBsonObjectSize', 'maxMessageSizeBytes', 'maxWriteBatchSize', '__nodejs_mock_server__'];\n\nvar StreamDescription = /*#__PURE__*/function () {\n  function StreamDescription(address, options) {\n    _classCallCheck(this, StreamDescription);\n\n    this.address = address;\n    this.type = parseServerType(null);\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.compressors = options && options.compression && Array.isArray(options.compression.compressors) ? options.compression.compressors : [];\n  }\n\n  _createClass(StreamDescription, [{\n    key: \"receiveResponse\",\n    value: function receiveResponse(response) {\n      var _this = this;\n\n      this.type = parseServerType(response);\n      RESPONSE_FIELDS.forEach(function (field) {\n        if (typeof response[field] !== 'undefined') {\n          _this[field] = response[field];\n        }\n      });\n\n      if (response.compression) {\n        this.compressor = this.compressors.filter(function (c) {\n          return response.compression.indexOf(c) !== -1;\n        })[0];\n      }\n    }\n  }]);\n\n  return StreamDescription;\n}();\n\nmodule.exports = {\n  StreamDescription: StreamDescription\n};","map":null,"metadata":{},"sourceType":"script"}