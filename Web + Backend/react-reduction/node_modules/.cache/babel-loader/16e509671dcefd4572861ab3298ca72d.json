{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\src\\\\pages\\\\ReservationPage.js\";\nimport bg11Image from 'assets/img/bg/background_1920-11.jpg';\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\nimport raspImage from 'assets/img/products/rasp.jpg';\nimport { UserCard } from 'components/Card';\nimport Page from 'components/Page';\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Card, CardBody, CardImg, CardImgOverlay, CardLink, CardText, CardTitle, Col, Row, Form, FormFeedback, FormGroup, FormText, Input, Label, UncontrolledButtonDropdown, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport jwt_decode from 'jwt-decode';\nimport { reserve, getCards, getReservations, getAllModels } from 'components/UserFunctions';\nimport { mongoose } from 'mongoose';\nimport fr from 'date-fns/locale/fr';\n\nvar ReservationPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReservationPage, _React$Component);\n\n  function ReservationPage() {\n    var _this;\n\n    _classCallCheck(this, ReservationPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReservationPage).call(this));\n\n    _this.onChange = function (date) {\n      return _this.setState({\n        startDate: date\n      });\n    };\n\n    _this.toggle = function (modalType) {\n      return function () {\n        if (!modalType) {\n          return _this.setState({\n            modal: !_this.state.modal\n          });\n        }\n\n        _this.setState(_defineProperty({}, \"modal_\".concat(modalType), !_this.state[\"modal_\".concat(modalType)]));\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n      console.log(_this.state.startDate);\n      var newRev = {\n        user: decoded._id,\n        card: _this.state.card,\n        hours: _this.state.hours,\n        dateBeg: _this.state.startDate,\n        dateEnd: moment(_this.state.startDate).add(_this.state.hours, 'hours').toDate(),\n        status: false\n      };\n\n      if (_this.state.Card != 0 && _this.state.hours != 0 && _this.state.startDate !== \"\") {\n        reserve(newRev).then(function (res) {\n          _this.props.history.push(\"/home\");\n        });\n      } else {\n        window.confirm(\"Choisir Date et carte avant de confirmer\");\n      }\n    };\n\n    _this.state = {\n      startDate: '',\n      models: [],\n      cards: [],\n      reser: [],\n      cardDispo: [],\n      card: 0,\n      hours: 0,\n      model: 0,\n      card2: 0,\n      showCard2: false,\n      modal: false,\n      modal_backdrop: false,\n      modal_nested_parent: false,\n      modal_nested: false,\n      backdrop: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n\n    return _this;\n  }\n\n  _createClass(ReservationPage, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // this.setState({ value: event.target.value });\n      // this.setState({ val: event.target.val });\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getAllModels().then(function (res) {\n        var models = res;\n\n        _this2.setState({\n          models: models\n        });\n      });\n      getCards().then(function (res) {\n        var cards = res;\n\n        _this2.setState({\n          cards: res\n        }); //this.setState({ cardDispo: res });\n\n      });\n      getReservations().then(function (res) {\n        var reser = res;\n\n        _this2.setState({\n          reser: res\n        });\n      });\n    }\n  }, {\n    key: \"findValue\",\n    value: function findValue(value, date) {\n      var found = false;\n      this.state.reser.forEach(function (e) {\n        // console.log(card.card._id)\n        if (value._id === e.card._id && moment(e.dateEnd).isSameOrAfter(date, 'day') && moment(e.dateEnd).isSameOrBefore(date, 'day') && e.status == false) // console.log(card.card._id)\n          found = true;\n      });\n      return found;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      if (prevState.model !== this.state.model) {\n        this.state.cards = [];\n        axios.get(\"/cards/getCardsByModel/\".concat(this.state.model)).then(function (res) {\n          //const data = res.data.responses;\n          _this3.setState({\n            cards: res.data.cards\n          });\n\n          console.log(_this3.state.cards);\n        }); // this.forceUpdate();\n\n        if (prevState.startDate !== this.state.startDate) {\n          this.state.cardDispo = [];\n          this.state.cards.forEach(function (card) {\n            //console.log(card._id)\n            // console.log(this.findValue(card._id))\n            if (!_this3.findValue(card, _this3.state.startDate)) {\n              _this3.state.cardDispo.push(card);\n            }\n          });\n          console.log(this.state.cardDispo);\n          this.forceUpdate();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(Page, {\n        title: \"R\\xE9servation\",\n        breadcrumbs: [{\n          name: 'RÃ©servation',\n          active: true\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 12,\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      }, \"Choisir Le mod\\xE9le de la carte\"), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleSelect\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, \"Mod\\xE9le\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"model\",\n        value: this.state.model,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }), this.state.models.map(function (card) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: card._id,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }\n        }, card.name);\n      }))))))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 12,\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, \"Choisir La date\"), /*#__PURE__*/React.createElement(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.onChange,\n        showTimeSelect: true,\n        timeFormat: \"HH:mm\",\n        timeIntervals: 30,\n        timeCaption: \"Heure\",\n        dateFormat: \"MMMM d, yyyy h:mm aa\",\n        minDate: new Date(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 23\n        }\n      }))))))), /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 12,\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, \"Choisir Une Carte\"), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleSelect\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }\n      }, \"Cartes\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"card\",\n        value: this.state.card,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }\n      }), this.state.cardDispo.map(function (card) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: card._id,\n          disabled: card.status ? false : true,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }\n        }, card.name, \" \", card.status ? ' (Disponible)' : ' (Indisponible)');\n      }))))))), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        sm: 6,\n        xs: 12,\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 23\n        }\n      }, \"Choisir La dur\\xE9e de r\\xE9servation \"), /*#__PURE__*/React.createElement(FormGroup, {\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: \"exampleSelect\",\n        sm: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, \"Dur\\xE9e\"), /*#__PURE__*/React.createElement(Col, {\n        sm: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"hours\",\n        color: \"primary\",\n        value: this.state.hours,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }\n      }, \"1 heure \"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }\n      }, \"2 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }\n      }, \"3 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 29\n        }\n      }, \"4 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }\n      }, \"5 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }\n      }, \"6 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }, \"7 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }, \"8 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }\n      }, \"9 heures\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, \"10 heures\")))), /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }\n      })))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }\n      }, \"Confirmer\")))));\n    }\n  }]);\n\n  return ReservationPage;\n}(React.Component);\n\nexport default withRouter(ReservationPage);","map":{"version":3,"sources":["C:/Users/yosrj/Desktop/IOT_Lab/react-reduction/src/pages/ReservationPage.js"],"names":["bg11Image","bg18Image","bg1Image","bg3Image","raspImage","UserCard","Page","bgCards","gradientCards","overlayCards","getStackLineChart","stackLineChartOptions","React","PropTypes","Line","axios","Link","withRouter","moment","DatePicker","Button","Card","CardBody","CardImg","CardImgOverlay","CardLink","CardText","CardTitle","Col","Row","Form","FormFeedback","FormGroup","FormText","Input","Label","UncontrolledButtonDropdown","Modal","ModalBody","ModalFooter","ModalHeader","jwt_decode","reserve","getCards","getReservations","getAllModels","mongoose","fr","ReservationPage","onChange","date","setState","startDate","toggle","modalType","modal","state","handleSubmit","event","preventDefault","token","localStorage","usertoken","decoded","console","log","newRev","user","_id","card","hours","dateBeg","dateEnd","add","toDate","status","then","res","props","history","push","window","confirm","models","cards","reser","cardDispo","model","card2","showCard2","modal_backdrop","modal_nested_parent","modal_nested","backdrop","handleChange","bind","target","name","value","found","forEach","e","isSameOrAfter","isSameOrBefore","prevProps","prevState","get","data","findValue","forceUpdate","active","map","Date","size","offset","Component"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,sCAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,YAAjC,QAAqD,gBAArD;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,eAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,cALF,EAMEC,QANF,EAOEC,QAPF,EAQEC,SARF,EASEC,GATF,EAUEC,GAVF,EAWEC,IAXF,EAYEC,YAZF,EAaEC,SAbF,EAcEC,QAdF,EAeEC,KAfF,EAgBEC,KAhBF,EAiBEC,0BAjBF,EAkBEC,KAlBF,EAmBEC,SAnBF,EAoBEC,WApBF,EAqBEC,WArBF,QAuBO,YAvBP;AAwBA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,eAA5B,EAA6CC,YAA7C,QAAiE,0BAAjE;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,EAAP,MAAe,oBAAf;;IACMC,e;;;AACJ,6BAAc;AAAA;;AAAA;;AACZ;;AADY,UA4BdC,QA5Bc,GA4BH,UAAAC,IAAI;AAAA,aAAI,MAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd,CAAJ;AAAA,KA5BD;;AAAA,UAiDdG,MAjDc,GAiDL,UAAAC,SAAS;AAAA,aAAI,YAAM;AAC1B,YAAI,CAACA,SAAL,EAAgB;AACd,iBAAO,MAAKH,QAAL,CAAc;AACnBI,YAAAA,KAAK,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADA,WAAd,CAAP;AAGD;;AACD,cAAKJ,QAAL,qCACYG,SADZ,GAC0B,CAAC,MAAKE,KAAL,iBAAoBF,SAApB,EAD3B;AAGD,OATiB;AAAA,KAjDJ;;AAAA,UAgGdG,YAhGc,GAgGC,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,SAA3B;AACA,UAAMC,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKT,KAAL,CAAWJ,SAAvB;AACA,UAAMc,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAEJ,OAAO,CAACK,GADD;AAEbC,QAAAA,IAAI,EAAE,MAAKb,KAAL,CAAWa,IAFJ;AAGbC,QAAAA,KAAK,EAAE,MAAKd,KAAL,CAAWc,KAHL;AAIbC,QAAAA,OAAO,EAAE,MAAKf,KAAL,CAAWJ,SAJP;AAKboB,QAAAA,OAAO,EAAEtD,MAAM,CAAC,MAAKsC,KAAL,CAAWJ,SAAZ,CAAN,CAA6BqB,GAA7B,CAAiC,MAAKjB,KAAL,CAAWc,KAA5C,EAAmD,OAAnD,EAA4DI,MAA5D,EALI;AAMbC,QAAAA,MAAM,EAAE;AANK,OAAf;;AAQA,UAAI,MAAKnB,KAAL,CAAWnC,IAAX,IAAmB,CAAnB,IAAwB,MAAKmC,KAAL,CAAWc,KAAX,IAAoB,CAA5C,IAAiD,MAAKd,KAAL,CAAWJ,SAAX,KAAyB,EAA9E,EAAkF;AAChFV,QAAAA,OAAO,CAACwB,MAAD,CAAP,CAAgBU,IAAhB,CAAqB,UAAAC,GAAG,EAAI;AAC1B,gBAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB;AACD,SAFD;AAGD,OAJD,MAKK;AACHC,QAAAA,MAAM,CAACC,OAAP,CAAe,0CAAf;AACD;AACF,KArHa;;AAEZ,UAAK1B,KAAL,GAAa;AACXJ,MAAAA,SAAS,EAAE,EADA;AAEX+B,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,SAAS,EAAE,EALA;AAMXjB,MAAAA,IAAI,EAAE,CANK;AAOXC,MAAAA,KAAK,EAAE,CAPI;AAQXiB,MAAAA,KAAK,EAAE,CARI;AASXC,MAAAA,KAAK,EAAE,CATI;AAUXC,MAAAA,SAAS,EAAE,KAVA;AAWXlC,MAAAA,KAAK,EAAE,KAXI;AAYXmC,MAAAA,cAAc,EAAE,KAZL;AAaXC,MAAAA,mBAAmB,EAAE,KAbV;AAcXC,MAAAA,YAAY,EAAE,KAdH;AAeXC,MAAAA,QAAQ,EAAE;AAfC,KAAb;AAiBA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKtC,YAAL,GAAoB,MAAKA,YAAL,CAAkBsC,IAAlB,uDAApB,CApBY,CAqBZ;;AArBY;AAsBb;;;;iCACYrC,K,EAAO;AAClB;AACA;AACA,WAAKP,QAAL,qBAAiBO,KAAK,CAACsC,MAAN,CAAaC,IAA9B,EAAqCvC,KAAK,CAACsC,MAAN,CAAaE,KAAlD;AACD;;;wCAGmB;AAAA;;AAClBrD,MAAAA,YAAY,GACT+B,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAMM,MAAM,GAAGN,GAAf;;AACA,QAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEgC,UAAAA,MAAM,EAANA;AAAF,SAAd;AACD,OAJH;AAMAxC,MAAAA,QAAQ,GAAGiC,IAAX,CAAgB,UAAAC,GAAG,EAAI;AACrB,YAAMO,KAAK,GAAGP,GAAd;;AACA,QAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEiC,UAAAA,KAAK,EAAEP;AAAT,SAAd,EAFqB,CAGrB;;AACD,OAJD;AAKAjC,MAAAA,eAAe,GAAGgC,IAAlB,CAAuB,UAAAC,GAAG,EAAI;AAC5B,YAAMQ,KAAK,GAAGR,GAAd;;AACA,QAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEkC,UAAAA,KAAK,EAAER;AAAT,SAAd;AACD,OAHD;AAKD;;;8BAYSqB,K,EAAOhD,I,EAAM;AACrB,UAAIiD,KAAK,GAAG,KAAZ;AAEA,WAAK3C,KAAL,CAAW6B,KAAX,CAAiBe,OAAjB,CAAyB,UAAAC,CAAC,EAAI;AAC5B;AACA,YAAIH,KAAK,CAAC9B,GAAN,KAAciC,CAAC,CAAChC,IAAF,CAAOD,GAArB,IAA4BlD,MAAM,CAACmF,CAAC,CAAC7B,OAAH,CAAN,CAAkB8B,aAAlB,CAAgCpD,IAAhC,EAAsC,KAAtC,CAA5B,IAA4EhC,MAAM,CAACmF,CAAC,CAAC7B,OAAH,CAAN,CAAkB+B,cAAlB,CAAiCrD,IAAjC,EAAuC,KAAvC,CAA5E,IAA6HmD,CAAC,CAAC1B,MAAF,IAAY,KAA7I,EACE;AACAwB,UAAAA,KAAK,GAAG,IAAR;AACH,OALD;AAMA,aAAOA,KAAP;AACD;;;uCACkBK,S,EAAWC,S,EAAW;AAAA;;AACvC,UAAIA,SAAS,CAAClB,KAAV,KAAoB,KAAK/B,KAAL,CAAW+B,KAAnC,EAA0C;AACxC,aAAK/B,KAAL,CAAW4B,KAAX,GAAmB,EAAnB;AACArE,QAAAA,KAAK,CAAC2F,GAAN,kCAAoC,KAAKlD,KAAL,CAAW+B,KAA/C,GACGX,IADH,CACQ,UAAAC,GAAG,EAAI;AACX;AACA,UAAA,MAAI,CAAC1B,QAAL,CAAc;AAAEiC,YAAAA,KAAK,EAAEP,GAAG,CAAC8B,IAAJ,CAASvB;AAAlB,WAAd;;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACT,KAAL,CAAW4B,KAAvB;AACD,SALH,EAFwC,CAQxC;;AAGA,YAAIqB,SAAS,CAACrD,SAAV,KAAwB,KAAKI,KAAL,CAAWJ,SAAvC,EAAkD;AAChD,eAAKI,KAAL,CAAW8B,SAAX,GAAuB,EAAvB;AACA,eAAK9B,KAAL,CAAW4B,KAAX,CAAiBgB,OAAjB,CAAyB,UAAA/B,IAAI,EAAI;AAC/B;AACA;AACA,gBAAI,CAAC,MAAI,CAACuC,SAAL,CAAevC,IAAf,EAAqB,MAAI,CAACb,KAAL,CAAWJ,SAAhC,CAAL,EAAiD;AAC/C,cAAA,MAAI,CAACI,KAAL,CAAW8B,SAAX,CAAqBN,IAArB,CAA0BX,IAA1B;AACD;AACF,WAND;AAOAL,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAW8B,SAAvB;AACA,eAAKuB,WAAL;AACD;AACF;AACF;;;6BAwBQ;AAAA;;AACP,0BACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,gBAAZ;AAA0B,QAAA,WAAW,EAAE,CAAC;AAAEZ,UAAAA,IAAI,EAAE,aAAR;AAAuBa,UAAAA,MAAM,EAAE;AAA/B,SAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKrD,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,eAEE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,eAAX;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAKE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAW+B,KAApD;AAA2D,QAAA,QAAQ,EAAE,KAAKO,YAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKtC,KAAL,CAAW2B,MAAX,CAAkB4B,GAAlB,CAAsB,UAAA1C,IAAI,EAAI;AAE7B,4BACE;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACD,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BC,IAAI,CAAC4B,IAA/B,CADF;AAGD,OALA,CAFH,CADF,CALF,CAFF,CADF,CAFF,CADF,eA2BE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAWJ,SADvB;AAEE,QAAA,QAAQ,EAAE,KAAKH,QAFjB;AAGE,QAAA,cAAc,MAHhB;AAIE,QAAA,UAAU,EAAC,OAJb;AAKE,QAAA,aAAa,EAAE,EALjB;AAME,QAAA,WAAW,EAAC,OANd;AAOE,QAAA,UAAU,EAAC,sBAPb;AAQE,QAAA,OAAO,EAAE,IAAI+D,IAAJ,EARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CADF,CAFF,CA3BF,CADF,eAmDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,eAAX;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAE,KAAKxD,KAAL,CAAWa,IAAnD;AAAyD,QAAA,QAAQ,EAAE,KAAKyB,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKtC,KAAL,CAAW8B,SAAX,CAAqByB,GAArB,CAAyB,UAAA1C,IAAI,EAAI;AAEhC,4BACE;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACD,GAApB;AAAyB,UAAA,QAAQ,EAAEC,IAAI,CAACM,MAAL,GAAc,KAAd,GAAsB,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgEN,IAAI,CAAC4B,IAArE,OAA4E5B,IAAI,CAACM,MAAL,GAAc,eAAd,GAAgC,iBAA5G,CADF;AAGD,OALA,CAFH,CADF,CALF,CAFF,CADF,CADF,CAFF,eA0BE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,eAEE,oBAAC,SAAD;AAAW,QAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,eAAX;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAC,SAAxC;AAAkD,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWc,KAApE;AACE,QAAA,QAAQ,EAAE,KAAKwB,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZF,CADF,CAJF,CAFF,eAuBE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,GAAG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEmB,UAAAA,IAAI,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE;AAApB,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAvBF,CADF,CADF,CA1BF,CAFF,eA8DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9DF,eAmEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnEF,CADF,CAnDF,CADF,CADF;AA+HD;;;;EAxP2BtG,KAAK,CAACuG,S;;AA2PpC,eAAelG,UAAU,CAAC+B,eAAD,CAAzB","sourcesContent":["import bg11Image from 'assets/img/bg/background_1920-11.jpg';\r\nimport bg18Image from 'assets/img/bg/background_1920-18.jpg';\r\nimport bg1Image from 'assets/img/bg/background_640-1.jpg';\r\nimport bg3Image from 'assets/img/bg/background_640-3.jpg';\r\nimport raspImage from 'assets/img/products/rasp.jpg';\r\nimport { UserCard } from 'components/Card';\r\nimport Page from 'components/Page';\r\nimport { bgCards, gradientCards, overlayCards } from 'demos/cardPage';\r\nimport { getStackLineChart, stackLineChartOptions } from 'demos/chartjs';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardLink,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  Label,\r\n  UncontrolledButtonDropdown,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n\r\n} from 'reactstrap';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { reserve, getCards, getReservations, getAllModels } from 'components/UserFunctions';\r\nimport { mongoose } from 'mongoose';\r\nimport fr from 'date-fns/locale/fr';\r\nclass ReservationPage extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      startDate: '',\r\n      models: [],\r\n      cards: [],\r\n      reser: [],\r\n      cardDispo: [],\r\n      card: 0,\r\n      hours: 0,\r\n      model: 0,\r\n      card2: 0,\r\n      showCard2: false,\r\n      modal: false,\r\n      modal_backdrop: false,\r\n      modal_nested_parent: false,\r\n      modal_nested: false,\r\n      backdrop: true,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    //this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    // this.setState({ value: event.target.value });\r\n    // this.setState({ val: event.target.val });\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n  onChange = date => this.setState({ startDate: date })\r\n\r\n  componentDidMount() {\r\n    getAllModels()\r\n      .then(res => {\r\n        const models = res;\r\n        this.setState({ models });\r\n      })\r\n\r\n    getCards().then(res => {\r\n      const cards = res;\r\n      this.setState({ cards: res });\r\n      //this.setState({ cardDispo: res });\r\n    })\r\n    getReservations().then(res => {\r\n      const reser = res;\r\n      this.setState({ reser: res });\r\n    })\r\n\r\n  }\r\n\r\n  toggle = modalType => () => {\r\n    if (!modalType) {\r\n      return this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    }\r\n    this.setState({\r\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\r\n    });\r\n  };\r\n  findValue(value, date) {\r\n    let found = false;\r\n\r\n    this.state.reser.forEach(e => {\r\n      // console.log(card.card._id)\r\n      if (value._id === e.card._id && moment(e.dateEnd).isSameOrAfter(date, 'day') && moment(e.dateEnd).isSameOrBefore(date, 'day') && e.status == false)\r\n        // console.log(card.card._id)\r\n        found = true\r\n    })\r\n    return found;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.model !== this.state.model) {\r\n      this.state.cards = []\r\n      axios.get(`/cards/getCardsByModel/${this.state.model}`)\r\n        .then(res => {\r\n          //const data = res.data.responses;\r\n          this.setState({ cards: res.data.cards });\r\n          console.log(this.state.cards)\r\n        })\r\n      // this.forceUpdate();\r\n\r\n\r\n      if (prevState.startDate !== this.state.startDate) {\r\n        this.state.cardDispo = []\r\n        this.state.cards.forEach(card => {\r\n          //console.log(card._id)\r\n          // console.log(this.findValue(card._id))\r\n          if (!this.findValue(card, this.state.startDate)) {\r\n            this.state.cardDispo.push(card)\r\n          }\r\n        })\r\n        console.log(this.state.cardDispo)\r\n        this.forceUpdate();\r\n      }\r\n    }\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const token = localStorage.usertoken\r\n    const decoded = jwt_decode(token)\r\n    console.log(this.state.startDate)\r\n    const newRev = {\r\n      user: decoded._id,\r\n      card: this.state.card,\r\n      hours: this.state.hours,\r\n      dateBeg: this.state.startDate,\r\n      dateEnd: moment(this.state.startDate).add(this.state.hours, 'hours').toDate(),\r\n      status: false,\r\n    }\r\n    if (this.state.Card != 0 && this.state.hours != 0 && this.state.startDate !== \"\") {\r\n      reserve(newRev).then(res => {\r\n        this.props.history.push(`/home`)\r\n      })\r\n    }\r\n    else {\r\n      window.confirm(\"Choisir Date et carte avant de confirmer\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page title=\"RÃ©servation\" breadcrumbs={[{ name: 'RÃ©servation', active: true }]}>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Row>\r\n            <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>Choisir Le modÃ©le de la carte</CardTitle>\r\n                  <FormGroup row>\r\n                    <Label for=\"exampleSelect\" sm={2}>\r\n                      ModÃ©le\r\n                  </Label>\r\n\r\n                    <Col sm={10}>\r\n                      <Input type=\"select\" name=\"model\" value={this.state.model} onChange={this.handleChange} >\r\n                        <option value=\"0\"></option>\r\n                        {this.state.models.map(card => {\r\n\r\n                          return (\r\n                            <option value={card._id}>{card.name}</option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>Choisir La date</CardTitle>\r\n                  <CardText>\r\n                    <FormGroup row>\r\n                      <DatePicker\r\n                        selected={this.state.startDate}\r\n                        onChange={this.onChange}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeIntervals={30}\r\n                        timeCaption=\"Heure\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        minDate={new Date()}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <CardBody>\r\n\r\n              <Row>\r\n\r\n                <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n                  <Card>\r\n                    <CardBody>\r\n                      <CardTitle>Choisir Une Carte</CardTitle>\r\n                      <FormGroup row>\r\n                        <Label for=\"exampleSelect\" sm={2}>\r\n                          Cartes\r\n                  </Label>\r\n\r\n                        <Col sm={10}>\r\n                          <Input type=\"select\" name=\"card\" value={this.state.card} onChange={this.handleChange} >\r\n                            <option value=\"0\"></option>\r\n                            {this.state.cardDispo.map(card => {\r\n\r\n                              return (\r\n                                <option value={card._id} disabled={card.status ? false : true}>{card.name} {card.status ? ' (Disponible)' : ' (Indisponible)'}</option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={12} className=\"mb-3\">\r\n                  <Card>\r\n                    <CardBody>\r\n                      <CardTitle>Choisir La durÃ©e de rÃ©servation </CardTitle>\r\n                      <FormGroup row>\r\n                        <Label for=\"exampleSelect\" sm={2}>\r\n                          DurÃ©e\r\n                  </Label>\r\n                        <Col sm={10}>\r\n                          <Input type=\"select\" name=\"hours\" color=\"primary\" value={this.state.hours}\r\n                            onChange={this.handleChange} >\r\n                            <option value=\"0\"></option>\r\n                            <option value=\"1\">1 heure </option>\r\n                            <option value=\"2\">2 heures</option>\r\n                            <option value=\"3\">3 heures</option>\r\n                            <option value=\"4\">4 heures</option>\r\n                            <option value=\"5\">5 heures</option>\r\n                            <option value=\"6\">6 heures</option>\r\n                            <option value=\"7\">7 heures</option>\r\n                            <option value=\"8\">8 heures</option>\r\n                            <option value=\"9\">9 heures</option>\r\n                            <option value=\"10\">10 heures</option>\r\n                          </Input>\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <FormGroup check row>\r\n                        <Col sm={{ size: 10, offset: 2 }}>\r\n\r\n                        </Col>\r\n                      </FormGroup>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n\r\n              </Row>\r\n\r\n\r\n              <Button color=\"primary\">Confirmer</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ReservationPage);\r\n"]},"metadata":{},"sourceType":"module"}