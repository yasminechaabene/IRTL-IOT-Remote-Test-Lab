{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXECUTE_WITH_SELECTION: Symbol('EXECUTE_WITH_SELECTION')\n};\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n */\n\nvar OperationBase = /*#__PURE__*/function () {\n  function OperationBase(options) {\n    _classCallCheck(this, OperationBase);\n\n    this.options = Object.assign({}, options);\n  }\n\n  _createClass(OperationBase, [{\n    key: \"hasAspect\",\n    value: function hasAspect(aspect) {\n      if (this.constructor.aspects == null) {\n        return false;\n      }\n\n      return this.constructor.aspects.has(aspect);\n    }\n  }, {\n    key: \"clearSession\",\n    value: function clearSession() {\n      delete this.options.session;\n    }\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      throw new TypeError('`execute` must be implemented for OperationBase subclasses');\n    }\n  }, {\n    key: \"session\",\n    set: function set(session) {\n      Object.assign(this.options, {\n        session: session\n      });\n    },\n    get: function get() {\n      return this.options.session;\n    }\n  }, {\n    key: \"canRetryRead\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return OperationBase;\n}();\n\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\n\nmodule.exports = {\n  Aspect: Aspect,\n  defineAspects: defineAspects,\n  OperationBase: OperationBase\n};","map":null,"metadata":{},"sourceType":"script"}