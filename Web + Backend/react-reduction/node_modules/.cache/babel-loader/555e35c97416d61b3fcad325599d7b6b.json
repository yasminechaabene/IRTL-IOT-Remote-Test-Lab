{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar AggregateOperation = require('./aggregate');\n\nvar CountDocumentsOperation = /*#__PURE__*/function (_AggregateOperation) {\n  _inherits(CountDocumentsOperation, _AggregateOperation);\n\n  function CountDocumentsOperation(collection, query, options) {\n    _classCallCheck(this, CountDocumentsOperation);\n\n    var pipeline = [{\n      $match: query\n    }];\n\n    if (typeof options.skip === 'number') {\n      pipeline.push({\n        $skip: options.skip\n      });\n    }\n\n    if (typeof options.limit === 'number') {\n      pipeline.push({\n        $limit: options.limit\n      });\n    }\n\n    pipeline.push({\n      $group: {\n        _id: 1,\n        n: {\n          $sum: 1\n        }\n      }\n    });\n    return _possibleConstructorReturn(this, _getPrototypeOf(CountDocumentsOperation).call(this, collection, pipeline, options));\n  }\n\n  _createClass(CountDocumentsOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      _get(_getPrototypeOf(CountDocumentsOperation.prototype), \"execute\", this).call(this, server, function (err, result) {\n        if (err) {\n          callback(err, null);\n          return;\n        } // NOTE: We're avoiding creating a cursor here to reduce the callstack.\n\n\n        var response = result.result;\n\n        if (response.cursor == null || response.cursor.firstBatch == null) {\n          callback(null, 0);\n          return;\n        }\n\n        var docs = response.cursor.firstBatch;\n        callback(null, docs.length ? docs[0].n : 0);\n      });\n    }\n  }]);\n\n  return CountDocumentsOperation;\n}(AggregateOperation);\n\nmodule.exports = CountDocumentsOperation;","map":null,"metadata":{},"sourceType":"script"}