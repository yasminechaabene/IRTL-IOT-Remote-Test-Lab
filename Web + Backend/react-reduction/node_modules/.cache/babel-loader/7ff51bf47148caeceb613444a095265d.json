{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\yosrj\\\\Documents\\\\REACT\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\yosrj\\\\Documents\\\\REACT\\\\react-reduction\\\\src\\\\pages\\\\ChartPage.js\";\n\nimport React from 'react';\nimport { getColor } from 'utils/colors';\nimport { randomNum } from 'utils/demos';\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\nimport { Line, Pie, Doughnut, Bar, Radar, Polar } from 'react-chartjs-2';\nimport Page from 'components/Page';\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nvar genLineData = function genLineData() {\n  var moreData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var moreData2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    labels: MONTHS,\n    datasets: [_objectSpread({\n      label: 'Dataset 1',\n      backgroundColor: getColor('primary'),\n      borderColor: getColor('primary'),\n      borderWidth: 1,\n      data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum()]\n    }, moreData), _objectSpread({\n      label: 'Dataset 2',\n      backgroundColor: getColor('secondary'),\n      borderColor: getColor('secondary'),\n      borderWidth: 1,\n      data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum()]\n    }, moreData2)]\n  };\n};\n\nvar genPieData = function genPieData() {\n  return {\n    datasets: [{\n      data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum()],\n      backgroundColor: [getColor('primary'), getColor('secondary'), getColor('success'), getColor('info'), getColor('danger')],\n      label: 'Dataset 1'\n    }],\n    labels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5']\n  };\n};\n\nvar ChartPage = function ChartPage() {\n  return /*#__PURE__*/React.createElement(Page, {\n    title: \"Charts\",\n    breadcrumbs: [{\n      name: 'Charts',\n      active: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Bar\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: genLineData(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Line\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: genLineData({\n      fill: false\n    }, {\n      fill: false\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Stacked Line\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: genLineData(),\n    options: {\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Month'\n          }\n        }],\n        yAxes: [{\n          stacked: true,\n          scaleLabel: {\n            display: true,\n            labelString: 'Value'\n          }\n        }]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Combo Bar / Line\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: genLineData({\n      type: 'line',\n      fill: false\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Pie\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: genPieData(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Doughnut\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: genPieData(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Polar\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Polar, {\n    data: genPieData(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    lg: 12,\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Radar\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Radar, {\n    data: genLineData(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default ChartPage;","map":{"version":3,"sources":["C:/Users/yosrj/Documents/REACT/react-reduction/src/pages/ChartPage.js"],"names":["React","getColor","randomNum","Row","Col","Card","CardHeader","CardBody","Line","Pie","Doughnut","Bar","Radar","Polar","Page","MONTHS","genLineData","moreData","moreData2","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","genPieData","ChartPage","name","active","fill","scales","xAxes","scaleLabel","display","labelString","yAxes","stacked","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { getColor } from 'utils/colors';\r\nimport { randomNum } from 'utils/demos';\r\n\r\nimport { Row, Col, Card, CardHeader, CardBody } from 'reactstrap';\r\n\r\nimport { Line, Pie, Doughnut, Bar, Radar, Polar } from 'react-chartjs-2';\r\n\r\nimport Page from 'components/Page';\r\n\r\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\nconst genLineData = (moreData = {}, moreData2 = {}) => {\r\n  return {\r\n    labels: MONTHS,\r\n    datasets: [\r\n      {\r\n        label: 'Dataset 1',\r\n        backgroundColor: getColor('primary'),\r\n        borderColor: getColor('primary'),\r\n        borderWidth: 1,\r\n        data: [\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n        ],\r\n        ...moreData,\r\n      },\r\n      {\r\n        label: 'Dataset 2',\r\n        backgroundColor: getColor('secondary'),\r\n        borderColor: getColor('secondary'),\r\n        borderWidth: 1,\r\n        data: [\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n          randomNum(),\r\n        ],\r\n        ...moreData2,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nconst genPieData = () => {\r\n  return {\r\n    datasets: [\r\n      {\r\n        data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum()],\r\n        backgroundColor: [\r\n          getColor('primary'),\r\n          getColor('secondary'),\r\n          getColor('success'),\r\n          getColor('info'),\r\n          getColor('danger'),\r\n        ],\r\n        label: 'Dataset 1',\r\n      },\r\n    ],\r\n    labels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5'],\r\n  };\r\n};\r\n\r\nconst ChartPage = () => {\r\n  return (\r\n    <Page title=\"Charts\" breadcrumbs={[{ name: 'Charts', active: true }]}>\r\n      <Row>\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Bar</CardHeader>\r\n            <CardBody>\r\n              <Bar data={genLineData()} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Line</CardHeader>\r\n            <CardBody>\r\n              <Line data={genLineData({ fill: false }, { fill: false })} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Stacked Line</CardHeader>\r\n            <CardBody>\r\n              <Line\r\n                data={genLineData()}\r\n                options={{\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Month',\r\n                        },\r\n                      },\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        stacked: true,\r\n                        scaleLabel: {\r\n                          display: true,\r\n                          labelString: 'Value',\r\n                        },\r\n                      },\r\n                    ],\r\n                  },\r\n                }}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Combo Bar / Line</CardHeader>\r\n            <CardBody>\r\n              <Bar data={genLineData({ type: 'line', fill: false })} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Pie</CardHeader>\r\n            <CardBody>\r\n              <Pie data={genPieData()} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Doughnut</CardHeader>\r\n            <CardBody>\r\n              <Doughnut data={genPieData()} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Polar</CardHeader>\r\n            <CardBody>\r\n              <Polar data={genPieData()} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col xl={6} lg={12} md={12}>\r\n          <Card>\r\n            <CardHeader>Radar</CardHeader>\r\n            <CardBody>\r\n              <Radar data={genLineData()} />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ChartPage;\r\n"]},"metadata":{},"sourceType":"module"}