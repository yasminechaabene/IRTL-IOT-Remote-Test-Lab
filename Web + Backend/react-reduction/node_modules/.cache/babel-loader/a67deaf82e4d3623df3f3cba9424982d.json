{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar MongoError = require('../core').MongoError;\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar insertDocuments = require('./common_functions').insertDocuments;\n\nvar InsertOneOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(InsertOneOperation, _OperationBase);\n\n  function InsertOneOperation(collection, doc, options) {\n    var _this;\n\n    _classCallCheck(this, InsertOneOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InsertOneOperation).call(this, options));\n    _this.collection = collection;\n    _this.doc = doc;\n    return _this;\n  }\n\n  _createClass(InsertOneOperation, [{\n    key: \"execute\",\n    value: function execute(callback) {\n      var coll = this.collection;\n      var doc = this.doc;\n      var options = this.options;\n\n      if (Array.isArray(doc)) {\n        return callback(MongoError.create({\n          message: 'doc parameter must be an object',\n          driver: true\n        }));\n      }\n\n      insertDocuments(coll, [doc], options, function (err, r) {\n        if (callback == null) return;\n        if (err && callback) return callback(err); // Workaround for pre 2.6 servers\n\n        if (r == null) return callback(null, {\n          result: {\n            ok: 1\n          }\n        }); // Add values to top level to ensure crud spec compatibility\n\n        r.insertedCount = r.result.n;\n        r.insertedId = doc._id;\n        if (callback) callback(null, r);\n      });\n    }\n  }]);\n\n  return InsertOneOperation;\n}(OperationBase);\n\nmodule.exports = InsertOneOperation;","map":null,"metadata":{},"sourceType":"script"}