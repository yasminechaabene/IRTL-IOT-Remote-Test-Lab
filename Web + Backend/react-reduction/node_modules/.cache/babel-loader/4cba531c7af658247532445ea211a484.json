{"ast":null,"code":"'use strict';\n\nvar GetMore = require('../connection/commands').GetMore;\n\nvar retrieveBSON = require('../connection/utils').retrieveBSON;\n\nvar MongoError = require('../error').MongoError;\n\nvar MongoNetworkError = require('../error').MongoNetworkError;\n\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\n\nvar collectionNamespace = require('./shared').collectionNamespace;\n\nvar maxWireVersion = require('../utils').maxWireVersion;\n\nvar applyCommonQueryOptions = require('./shared').applyCommonQueryOptions;\n\nvar command = require('./command');\n\nfunction getMore(server, ns, cursorState, batchSize, options, callback) {\n  options = options || {};\n  var wireVersion = maxWireVersion(server);\n\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    var response = result.message; // If we have a timed out query or a cursor that was killed\n\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (wireVersion < 4) {\n      var _cursorId = typeof response.cursorId === 'number' ? Long.fromNumber(response.cursorId) : response.cursorId;\n\n      cursorState.documents = response.documents;\n      cursorState.cursorId = _cursorId;\n      callback(null, null, response.connection);\n      return;\n    } // We have an error detected\n\n\n    if (response.documents[0].ok === 0) {\n      return callback(new MongoError(response.documents[0]));\n    } // Ensure we have a Long valid cursor id\n\n\n    var cursorId = typeof response.documents[0].cursor.id === 'number' ? Long.fromNumber(response.documents[0].cursor.id) : response.documents[0].cursor.id;\n    cursorState.documents = response.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n    callback(null, response.documents[0], response.connection);\n  }\n\n  if (wireVersion < 4) {\n    var bson = server.s.bson;\n    var getMoreOp = new GetMore(bson, ns, cursorState.cursorId, {\n      numberToReturn: batchSize\n    });\n    var queryOptions = applyCommonQueryOptions({}, cursorState);\n    server.s.pool.write(getMoreOp, queryOptions, queryCallback);\n    return;\n  }\n\n  var getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: collectionNamespace(ns),\n    batchSize: Math.abs(batchSize)\n  };\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  var commandOptions = Object.assign({\n    returnFieldSelector: null,\n    documentsReturnedIn: 'nextBatch'\n  }, options);\n\n  if (cursorState.session) {\n    commandOptions.session = cursorState.session;\n  }\n\n  command(server, ns, getMoreCmd, commandOptions, queryCallback);\n}\n\nmodule.exports = getMore;","map":null,"metadata":{},"sourceType":"script"}