{"ast":null,"code":"'use strict';\n/**\n * The base class for all monitoring events published from the connection pool\n *\n * @property {number} time A timestamp when the event was created\n * @property {string} address The address (host/port pair) of the pool\n */\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar ConnectionPoolMonitoringEvent = function ConnectionPoolMonitoringEvent(pool) {\n  _classCallCheck(this, ConnectionPoolMonitoringEvent);\n\n  this.time = new Date();\n  this.address = pool.address;\n};\n/**\n * An event published when a connection pool is created\n *\n * @property {Object} options The options used to create this connection pool\n */\n\n\nvar ConnectionPoolCreatedEvent = /*#__PURE__*/function (_ConnectionPoolMonito) {\n  _inherits(ConnectionPoolCreatedEvent, _ConnectionPoolMonito);\n\n  function ConnectionPoolCreatedEvent(pool) {\n    var _this;\n\n    _classCallCheck(this, ConnectionPoolCreatedEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionPoolCreatedEvent).call(this, pool));\n    _this.options = pool.options;\n    return _this;\n  }\n\n  return ConnectionPoolCreatedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection pool is closed\n */\n\n\nvar ConnectionPoolClosedEvent = /*#__PURE__*/function (_ConnectionPoolMonito2) {\n  _inherits(ConnectionPoolClosedEvent, _ConnectionPoolMonito2);\n\n  function ConnectionPoolClosedEvent(pool) {\n    _classCallCheck(this, ConnectionPoolClosedEvent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConnectionPoolClosedEvent).call(this, pool));\n  }\n\n  return ConnectionPoolClosedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection pool creates a new connection\n *\n * @property {number} connectionId A monotonically increasing, per-pool id for the newly created connection\n */\n\n\nvar ConnectionCreatedEvent = /*#__PURE__*/function (_ConnectionPoolMonito3) {\n  _inherits(ConnectionCreatedEvent, _ConnectionPoolMonito3);\n\n  function ConnectionCreatedEvent(pool, connection) {\n    var _this2;\n\n    _classCallCheck(this, ConnectionCreatedEvent);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionCreatedEvent).call(this, pool));\n    _this2.connectionId = connection.id;\n    return _this2;\n  }\n\n  return ConnectionCreatedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection is ready for use\n *\n * @property {number} connectionId The id of the connection\n */\n\n\nvar ConnectionReadyEvent = /*#__PURE__*/function (_ConnectionPoolMonito4) {\n  _inherits(ConnectionReadyEvent, _ConnectionPoolMonito4);\n\n  function ConnectionReadyEvent(pool, connection) {\n    var _this3;\n\n    _classCallCheck(this, ConnectionReadyEvent);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionReadyEvent).call(this, pool));\n    _this3.connectionId = connection.id;\n    return _this3;\n  }\n\n  return ConnectionReadyEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection is closed\n *\n * @property {number} connectionId The id of the connection\n * @property {string} reason The reason the connection was closed\n */\n\n\nvar ConnectionClosedEvent = /*#__PURE__*/function (_ConnectionPoolMonito5) {\n  _inherits(ConnectionClosedEvent, _ConnectionPoolMonito5);\n\n  function ConnectionClosedEvent(pool, connection, reason) {\n    var _this4;\n\n    _classCallCheck(this, ConnectionClosedEvent);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionClosedEvent).call(this, pool));\n    _this4.connectionId = connection.id;\n    _this4.reason = reason || 'unknown';\n    return _this4;\n  }\n\n  return ConnectionClosedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a request to check a connection out begins\n */\n\n\nvar ConnectionCheckOutStartedEvent = /*#__PURE__*/function (_ConnectionPoolMonito6) {\n  _inherits(ConnectionCheckOutStartedEvent, _ConnectionPoolMonito6);\n\n  function ConnectionCheckOutStartedEvent(pool) {\n    _classCallCheck(this, ConnectionCheckOutStartedEvent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConnectionCheckOutStartedEvent).call(this, pool));\n  }\n\n  return ConnectionCheckOutStartedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a request to check a connection out fails\n *\n * @property {string} reason The reason the attempt to check out failed\n */\n\n\nvar ConnectionCheckOutFailedEvent = /*#__PURE__*/function (_ConnectionPoolMonito7) {\n  _inherits(ConnectionCheckOutFailedEvent, _ConnectionPoolMonito7);\n\n  function ConnectionCheckOutFailedEvent(pool, reason) {\n    var _this5;\n\n    _classCallCheck(this, ConnectionCheckOutFailedEvent);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionCheckOutFailedEvent).call(this, pool));\n    _this5.reason = reason;\n    return _this5;\n  }\n\n  return ConnectionCheckOutFailedEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection is checked out of the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\n\n\nvar ConnectionCheckedOutEvent = /*#__PURE__*/function (_ConnectionPoolMonito8) {\n  _inherits(ConnectionCheckedOutEvent, _ConnectionPoolMonito8);\n\n  function ConnectionCheckedOutEvent(pool, connection) {\n    var _this6;\n\n    _classCallCheck(this, ConnectionCheckedOutEvent);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionCheckedOutEvent).call(this, pool));\n    _this6.connectionId = connection.id;\n    return _this6;\n  }\n\n  return ConnectionCheckedOutEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection is checked into the connection pool\n *\n * @property {number} connectionId The id of the connection\n */\n\n\nvar ConnectionCheckedInEvent = /*#__PURE__*/function (_ConnectionPoolMonito9) {\n  _inherits(ConnectionCheckedInEvent, _ConnectionPoolMonito9);\n\n  function ConnectionCheckedInEvent(pool, connection) {\n    var _this7;\n\n    _classCallCheck(this, ConnectionCheckedInEvent);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionCheckedInEvent).call(this, pool));\n    _this7.connectionId = connection.id;\n    return _this7;\n  }\n\n  return ConnectionCheckedInEvent;\n}(ConnectionPoolMonitoringEvent);\n/**\n * An event published when a connection pool is cleared\n */\n\n\nvar ConnectionPoolClearedEvent = /*#__PURE__*/function (_ConnectionPoolMonito10) {\n  _inherits(ConnectionPoolClearedEvent, _ConnectionPoolMonito10);\n\n  function ConnectionPoolClearedEvent(pool) {\n    _classCallCheck(this, ConnectionPoolClearedEvent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConnectionPoolClearedEvent).call(this, pool));\n  }\n\n  return ConnectionPoolClearedEvent;\n}(ConnectionPoolMonitoringEvent);\n\nvar CMAP_EVENT_NAMES = ['connectionPoolCreated', 'connectionPoolClosed', 'connectionCreated', 'connectionReady', 'connectionClosed', 'connectionCheckOutStarted', 'connectionCheckOutFailed', 'connectionCheckedOut', 'connectionCheckedIn', 'connectionPoolCleared'];\nmodule.exports = {\n  CMAP_EVENT_NAMES: CMAP_EVENT_NAMES,\n  ConnectionPoolCreatedEvent: ConnectionPoolCreatedEvent,\n  ConnectionPoolClosedEvent: ConnectionPoolClosedEvent,\n  ConnectionCreatedEvent: ConnectionCreatedEvent,\n  ConnectionReadyEvent: ConnectionReadyEvent,\n  ConnectionClosedEvent: ConnectionClosedEvent,\n  ConnectionCheckOutStartedEvent: ConnectionCheckOutStartedEvent,\n  ConnectionCheckOutFailedEvent: ConnectionCheckOutFailedEvent,\n  ConnectionCheckedOutEvent: ConnectionCheckedOutEvent,\n  ConnectionCheckedInEvent: ConnectionCheckedInEvent,\n  ConnectionPoolClearedEvent: ConnectionPoolClearedEvent\n};","map":null,"metadata":{},"sourceType":"script"}