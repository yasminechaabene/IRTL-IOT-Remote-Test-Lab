{"ast":null,"code":"'use strict'; // shared state names\n\nvar STATE_CLOSING = 'closing';\nvar STATE_CLOSED = 'closed';\nvar STATE_CONNECTING = 'connecting';\nvar STATE_CONNECTED = 'connected'; // An enumeration of topology types we know about\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n}; // An enumeration of server types we know about\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\nvar TOPOLOGY_DEFAULTS = {\n  useUnifiedTopology: true,\n  localThresholdMS: 15,\n  serverSelectionTimeoutMS: 30000,\n  heartbeatFrequencyMS: 10000,\n  minHeartbeatFrequencyMS: 500\n};\n\nfunction drainTimerQueue(queue) {\n  queue.forEach(clearTimeout);\n  queue.clear();\n}\n\nfunction clearAndRemoveTimerFrom(timer, timers) {\n  clearTimeout(timer);\n  return timers.delete(timer);\n}\n\nmodule.exports = {\n  STATE_CLOSING: STATE_CLOSING,\n  STATE_CLOSED: STATE_CLOSED,\n  STATE_CONNECTING: STATE_CONNECTING,\n  STATE_CONNECTED: STATE_CONNECTED,\n  TOPOLOGY_DEFAULTS: TOPOLOGY_DEFAULTS,\n  TopologyType: TopologyType,\n  ServerType: ServerType,\n  drainTimerQueue: drainTimerQueue,\n  clearAndRemoveTimerFrom: clearAndRemoveTimerFrom\n};","map":null,"metadata":{},"sourceType":"script"}