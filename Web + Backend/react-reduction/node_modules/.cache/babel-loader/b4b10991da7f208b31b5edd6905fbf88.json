{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\src\\\\components\\\\Layout\\\\Header.js\";\nimport Avatar from 'components/Avatar';\nimport { UserCard } from 'components/Card';\nimport Notifications from 'components/Notifications';\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport logo from 'assets/img/logo/logo_200.png';\nimport SearchInput from 'components/SearchInput'; //import { notificationsData } from 'demos/header';\n\nimport withBadge from 'hocs/withBadge';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { getMyResponses } from 'components/UserFunctions';\nimport axios from 'axios';\nimport moment from 'moment';\nimport classnames from \"classnames\";\nimport { MdClearAll, MdExitToApp, MdKeyboardArrowDown, MdHelp, MdInsertChart, MdMessage, MdExtension, MdNotificationsActive, MdNotificationsNone, MdPersonPin, MdSettingsApplications, MdRadioButtonChecked, MdChromeReaderMode } from 'react-icons/md';\nimport { ListGroup, ListGroupItem // NavbarToggler,\n, Nav, Navbar, NavItem, NavLink, Popover, PopoverBody, Button, Collapse, NavbarBrand, Container, NavLink as BSNavLink } from 'reactstrap';\nimport bn from 'utils/bemnames';\nvar notif = localStorage.getItem(\"notif\");\nvar bem = bn.create('header');\nvar navComponents = [{\n  to: '/cards',\n  name: 'consulter les cartes',\n  exact: false,\n  Icon: MdRadioButtonChecked\n}, {\n  to: '/reservation',\n  name: 'reservation',\n  exact: false,\n  Icon: MdChromeReaderMode\n}];\nvar MdMessageWithBadge = withBadge({\n  size: 'md',\n  color: 'primary',\n  style: {\n    top: -10,\n    right: -10,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  children: /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, notif)\n})(MdMessage);\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpenNotificationPopover: false,\n      isNotificationConfirmed: false,\n      isOpenUserCardPopover: false,\n      navbarCollapse: false,\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      profileImg: '',\n      userId: '',\n      data: [],\n      notificationsData: [],\n      errors: {}\n    };\n\n    _this.isUser = function () {\n      var user = false; // console.log(localStorage.getItem('role'))\n\n      if (localStorage.getItem('role') === 'user') user = true;\n      return user;\n    };\n\n    _this.toggleNotificationPopover = function () {\n      _this.setState({\n        isOpenNotificationPopover: !_this.state.isOpenNotificationPopover\n      });\n\n      if (!_this.state.isNotificationConfirmed) {\n        _this.setState({\n          isNotificationConfirmed: true\n        });\n      }\n    };\n\n    _this.toggleUserCardPopover = function () {\n      _this.setState({\n        isOpenUserCardPopover: !_this.state.isOpenUserCardPopover\n      });\n    };\n\n    _this.toggleNavbarCollapse = function () {\n      _this.setState({\n        navbarCollapse: !_this.state.navbarCollapse\n      });\n\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n\n    _this.handleSidebarControlButton = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"checkDate\",\n    value: function checkDate(duration) {\n      if (duration.hours() == 0 && duration.days() == 0) return duration.minutes() + \" M\";else if (duration.days() == 0) return duration.hours() + \" H\";else return duration.days() + \" J\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var token = localStorage.usertoken;\n      var decoded = jwt_decode(token);\n      this.setState({\n        userId: decoded._id,\n        first_name: decoded.first_name,\n        last_name: decoded.last_name,\n        email: decoded.email,\n        password: decoded.password,\n        profileImg: decoded.profileImg\n      });\n      var user = decoded._id;\n      axios.get(\"/responses/getMyResponses/\".concat(user)).then(function (res) {\n        var data = res.data.responses;\n\n        _this2.setState({\n          data: res.data.responses\n        });\n\n        localStorage.setItem(\"notif\", _this2.state.data.length);\n        console.log(_this2.state.data);\n\n        _this2.state.data.forEach(function (e) {\n          var diff = moment(new Date()).diff(moment(e.date));\n          var object = {\n            _id: e._id,\n            description: e.description,\n            dateRes: e.date,\n            id: data.indexOf(e) + 1,\n            avatar: user1Image,\n            message: e.name,\n            date: \"Il y a\" + _this2.checkDate(moment.duration(diff))\n          };\n\n          _this2.state.notificationsData.push(object);\n\n          console.log(_this2.state.notificationsData); //localStorage.setItem(\"notif\",this.state.notificationsData.length)\n        });\n      });\n      this.MdNotificationsActiveWithBadge = withBadge({\n        size: 'md',\n        color: 'primary',\n        style: {\n          top: -10,\n          right: -10,\n          display: 'inline-flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/React.createElement(\"small\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, this.state.notificationsData.length)\n      })(MdNotificationsActive); // console.log(user)\n      // console.log(this.state.data)\n    }\n  }, {\n    key: \"logOut\",\n    value: function logOut(e) {\n      e.preventDefault(); // localStorage.removeItem('usertoken')\n      // localStorage.removeItem('admin')\n      // localStorage.removeItem('state')\n\n      localStorage.clear();\n      this.props.history.push(\"/login\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isNotificationConfirmed = this.state.isNotificationConfirmed;\n      return /*#__PURE__*/React.createElement(Navbar, {\n        className: classnames(\"fixed-top\", \"navbar-transparent\"),\n        expand: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-translate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavbarBrand, {\n        \"data-placement\": \"bottom\",\n        href: \"/home\",\n        src: user1Image,\n        target: \"_blank\",\n        title: \"IOT LAB\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, \"IOT REMOTE TEST LAB\"), /*#__PURE__*/React.createElement(\"button\", {\n        \"aria-expanded\": this.state.navbarCollapse,\n        className: classnames(\"navbar-toggler navbar-toggler\", {\n          toggled: this.state.navbarCollapse\n        }),\n        onClick: this.toggleNavbarCollapse,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Nav, {\n        navbar: true,\n        className: bem.e('nav-right'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, this.isUser() && /*#__PURE__*/React.createElement(NavItem, {\n        className: \"d-inline-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        id: \"Popover1\",\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }, isNotificationConfirmed ? /*#__PURE__*/React.createElement(MdMessage, {\n        size: 25,\n        className: \"text-secondary can-click\",\n        onClick: this.toggleNotificationPopover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(MdMessageWithBadge, {\n        size: 25,\n        className: \"text-secondary can-click animated swing infinite\",\n        onClick: this.toggleNotificationPopover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: this.state.isOpenNotificationPopover,\n        toggle: this.toggleNotificationPopover,\n        target: \"Popover1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(PopoverBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, this.state.notificationsData.length > 0 ? /*#__PURE__*/React.createElement(Notifications, {\n        notificationsData: this.state.notificationsData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, \"Pas de nouveau message\")))), /*#__PURE__*/React.createElement(NavItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        id: \"Popover2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        onClick: this.toggleUserCardPopover,\n        className: \"can-click\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Popover, {\n        placement: \"bottom-end\",\n        isOpen: this.state.isOpenUserCardPopover,\n        toggle: this.toggleUserCardPopover,\n        target: \"Popover2\",\n        className: \"p-0 border-0\",\n        style: {\n          minWidth: 250\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PopoverBody, {\n        className: \"p-0 border-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(UserCard, {\n        title: this.state.first_name,\n        subtitle: this.state.email // text=\"Last updated 3 mins ago\"\n        ,\n        className: \"border-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup, {\n        flush: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdPersonPin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }), \" Profil\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n        tag: \"button\",\n        action: true,\n        className: \"border-light\",\n        onClick: this.logOut.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MdExitToApp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 23\n        }\n      }), \" D\\xE9connexion\")))))))));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default withRouter(Header);","map":{"version":3,"sources":["C:/Users/yosrj/Desktop/IOT_Lab/react-reduction/src/components/Layout/Header.js"],"names":["Avatar","UserCard","Notifications","user1Image","logo","SearchInput","withBadge","React","Link","withRouter","jwt_decode","getMyResponses","axios","moment","classnames","MdClearAll","MdExitToApp","MdKeyboardArrowDown","MdHelp","MdInsertChart","MdMessage","MdExtension","MdNotificationsActive","MdNotificationsNone","MdPersonPin","MdSettingsApplications","MdRadioButtonChecked","MdChromeReaderMode","ListGroup","ListGroupItem","Nav","Navbar","NavItem","NavLink","Popover","PopoverBody","Button","Collapse","NavbarBrand","Container","BSNavLink","bn","notif","localStorage","getItem","bem","create","navComponents","to","name","exact","Icon","MdMessageWithBadge","size","color","style","top","right","display","justifyContent","alignItems","children","Header","state","isOpenNotificationPopover","isNotificationConfirmed","isOpenUserCardPopover","navbarCollapse","first_name","last_name","email","password","profileImg","userId","data","notificationsData","errors","isUser","user","toggleNotificationPopover","setState","toggleUserCardPopover","toggleNavbarCollapse","document","documentElement","classList","toggle","handleSidebarControlButton","event","preventDefault","stopPropagation","querySelector","duration","hours","days","minutes","token","usertoken","decoded","_id","get","then","res","responses","setItem","length","console","log","forEach","e","diff","Date","date","object","description","dateRes","id","indexOf","avatar","message","checkDate","push","MdNotificationsActiveWithBadge","clear","props","history","toggled","minWidth","logOut","bind","Component"],"mappings":"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","sourcesContent":["import Avatar from 'components/Avatar';\r\nimport { UserCard } from 'components/Card';\r\nimport Notifications from 'components/Notifications';\r\nimport user1Image from 'assets/img/users/100_1.jpg';\r\nimport logo from 'assets/img/logo/logo_200.png';\r\nimport SearchInput from 'components/SearchInput';\r\n//import { notificationsData } from 'demos/header';\r\nimport withBadge from 'hocs/withBadge';\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { getMyResponses } from 'components/UserFunctions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport classnames from \"classnames\";\r\nimport {\r\n  MdClearAll,\r\n  MdExitToApp,\r\n  MdKeyboardArrowDown,\r\n  MdHelp,\r\n  MdInsertChart,\r\n  MdMessage,\r\n  MdExtension,\r\n  MdNotificationsActive,\r\n  MdNotificationsNone,\r\n  MdPersonPin,\r\n  MdSettingsApplications,\r\n  MdRadioButtonChecked,\r\n  MdChromeReaderMode,\r\n} from 'react-icons/md';\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  // NavbarToggler,\r\n  Nav,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Popover,\r\n  PopoverBody,\r\n  Button,\r\n  Collapse,\r\n  NavbarBrand,\r\n  Container,\r\n  NavLink as BSNavLink,\r\n} from 'reactstrap';\r\nimport bn from 'utils/bemnames';\r\nconst notif =localStorage.getItem(\"notif\")\r\nconst bem = bn.create('header');\r\nconst navComponents = [\r\n  { to: '/cards', name: 'consulter les cartes', exact: false, Icon: MdRadioButtonChecked },\r\n\r\n  { to: '/reservation', name: 'reservation', exact: false, Icon: MdChromeReaderMode },\r\n];\r\nconst MdMessageWithBadge = withBadge({\r\n  size: 'md',\r\n  color: 'primary',\r\n  style: {\r\n    top: -10,\r\n    right: -10,\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\nchildren: <small>{notif}</small>,\r\n})(MdMessage);\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    isOpenNotificationPopover: false,\r\n    isNotificationConfirmed: false,\r\n    isOpenUserCardPopover: false,\r\n    navbarCollapse:false,\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password: '',\r\n    profileImg: '',\r\n    userId: '',\r\n    data: [],\r\n    notificationsData: [],\r\n    errors: {}\r\n  };\r\n  checkDate(duration) {\r\n    if (duration.hours() == 0 && duration.days() == 0)\r\n      return duration.minutes() + \" M\"\r\n    else if (duration.days() == 0)\r\n      return duration.hours() + \" H\"\r\n    else\r\n      return duration.days() + \" J\"\r\n\r\n\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    const token = localStorage.usertoken\r\n    const decoded = jwt_decode(token)\r\n    this.setState({\r\n      userId: decoded._id,\r\n      first_name: decoded.first_name,\r\n      last_name: decoded.last_name,\r\n      email: decoded.email,\r\n      password: decoded.password,\r\n      profileImg: decoded.profileImg\r\n\r\n    })\r\n    let user = decoded._id\r\n    axios.get(`/responses/getMyResponses/${user}`)\r\n      .then(res => {\r\n        const data = res.data.responses;\r\n        this.setState({ data: res.data.responses });\r\n        localStorage.setItem(\"notif\",this.state.data.length)\r\n        console.log(this.state.data)\r\n        this.state.data.forEach(e => {\r\n          let diff = moment(new Date()).diff(moment(e.date))\r\n          const object = {\r\n            _id: e._id,\r\n            description: e.description,\r\n            dateRes: e.date,\r\n            id: data.indexOf(e) + 1,\r\n            avatar: user1Image,\r\n            message: e.name,\r\n            date: \"Il y a\" + this.checkDate(moment.duration(diff)),\r\n          }\r\n          this.state.notificationsData.push(object)\r\n          console.log(this.state.notificationsData)\r\n          //localStorage.setItem(\"notif\",this.state.notificationsData.length)\r\n        })\r\n\r\n      })\r\n     this. MdNotificationsActiveWithBadge = withBadge({\r\n        size: 'md',\r\n        color: 'primary',\r\n        style: {\r\n          top: -10,\r\n          right: -10,\r\n          display: 'inline-flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        },\r\n      children: <small>{this.state.notificationsData.length}</small>,\r\n      })(MdNotificationsActive);\r\n    // console.log(user)\r\n    // console.log(this.state.data)\r\n\r\n  }\r\n  isUser = () => {\r\n    let user = false\r\n    // console.log(localStorage.getItem('role'))\r\n    if (localStorage.getItem('role') === 'user')\r\n      user = true\r\n    return user;\r\n  };\r\n  logOut(e) {\r\n    e.preventDefault()\r\n    // localStorage.removeItem('usertoken')\r\n    // localStorage.removeItem('admin')\r\n    // localStorage.removeItem('state')\r\n    localStorage.clear()\r\n    this.props.history.push(`/login`)\r\n  }\r\n  toggleNotificationPopover = () => {\r\n    this.setState({\r\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\r\n    });\r\n\r\n    if (!this.state.isNotificationConfirmed) {\r\n      this.setState({ isNotificationConfirmed: true });\r\n    }\r\n  };\r\n\r\n  toggleUserCardPopover = () => {\r\n    this.setState({\r\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\r\n    });\r\n  };\r\n   toggleNavbarCollapse = () => {\r\n    this.setState({navbarCollapse: !this.state.navbarCollapse});\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  };\r\n  handleSidebarControlButton = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\r\n  };\r\n\r\n  render() {\r\n    const { isNotificationConfirmed } = this.state;\r\n\r\n    return (\r\n      <Navbar className={classnames(\"fixed-top\", \"navbar-transparent\")} expand=\"lg\">\r\n      <Container>\r\n      <div className=\"navbar-translate\">\r\n          <NavbarBrand\r\n            data-placement=\"bottom\"\r\n            href=\"/home\"\r\n            src={user1Image}\r\n            target=\"_blank\"\r\n            title=\"IOT LAB\"\r\n          >\r\n           IOT REMOTE TEST LAB\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={this.state.navbarCollapse}\r\n            className={classnames(\"navbar-toggler navbar-toggler\", {\r\n              toggled: this.state.navbarCollapse\r\n            })}\r\n            onClick={this.toggleNavbarCollapse}\r\n          >\r\n           <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n\r\n        <Nav navbar className={bem.e('nav-right')}>\r\n          {this.isUser() &&\r\n            <NavItem className=\"d-inline-flex\">\r\n              <NavLink id=\"Popover1\" className=\"position-relative\">\r\n                {isNotificationConfirmed ? (\r\n                  <MdMessage\r\n                    size={25}\r\n                    className=\"text-secondary can-click\"\r\n                    onClick={this.toggleNotificationPopover}\r\n                  />\r\n                ) : (\r\n                    <MdMessageWithBadge\r\n                      size={25}\r\n                      className=\"text-secondary can-click animated swing infinite\"\r\n                      onClick={this.toggleNotificationPopover}\r\n                    />\r\n                  )}\r\n              </NavLink>\r\n              <Popover\r\n                placement=\"bottom\"\r\n                isOpen={this.state.isOpenNotificationPopover}\r\n                toggle={this.toggleNotificationPopover}\r\n                target=\"Popover1\"\r\n              >\r\n                <PopoverBody>\r\n                  {this.state.notificationsData.length>0 ?(\r\n                  <Notifications notificationsData={this.state.notificationsData} />):\r\n                  (\r\n                    <Button >Pas de nouveau message</Button>\r\n                  )}\r\n                </PopoverBody>\r\n              </Popover>\r\n            </NavItem>}\r\n\r\n          <NavItem>\r\n            <NavLink id=\"Popover2\">\r\n              <Avatar\r\n                onClick={this.toggleUserCardPopover}\r\n                className=\"can-click\"\r\n              />\r\n            </NavLink>\r\n            <Popover\r\n              placement=\"bottom-end\"\r\n              isOpen={this.state.isOpenUserCardPopover}\r\n              toggle={this.toggleUserCardPopover}\r\n              target=\"Popover2\"\r\n              className=\"p-0 border-0\"\r\n              style={{ minWidth: 250 }}\r\n            >\r\n              <PopoverBody className=\"p-0 border-light\">\r\n                <UserCard\r\n                  title={this.state.first_name}\r\n                  subtitle={this.state.email}\r\n                  // text=\"Last updated 3 mins ago\"\r\n                  className=\"border-light\"\r\n                >\r\n                  <ListGroup flush>\r\n                    <Link to=\"/profile\">\r\n                      <ListGroupItem tag=\"button\" action className=\"border-light\">\r\n                        <MdPersonPin /> Profil\r\n                    </ListGroupItem>\r\n                    </Link>\r\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.logOut.bind(this)}>\r\n                      <MdExitToApp /> Déconnexion\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </UserCard>\r\n              </PopoverBody>\r\n            </Popover>\r\n          </NavItem>\r\n        </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(Header);\r\n"]},"metadata":{},"sourceType":"module"}