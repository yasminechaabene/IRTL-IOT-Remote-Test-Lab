{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\src\\\\components\\\\AuthForm.js\";\nimport logo200Image from 'assets/img/logo/logo_200.png';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { register } from './UserFunctions';\nimport { login, getRole, getState, getPatterns } from './UserFunctions';\nimport { withRouter } from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode';\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nvar classRegex = RegExp(/^[1-5]{1}[a-zA-Z]+[1-9]*$/i);\nvar nameRegex = RegExp(/^[a-zA-Z]+$/i);\n\nvar validateForm = function validateForm(errors) {\n  var valid = true;\n  Object.values(errors).forEach(function (val) {\n    return val.length > 0 && (valid = false);\n  });\n  return valid;\n};\n\nvar AuthForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(AuthForm, _React$Component);\n\n  function AuthForm() {\n    var _this;\n\n    _classCallCheck(this, AuthForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthForm).call(this));\n\n    _this.toggle = function (modalType) {\n      return function () {\n        if (!modalType) {\n          return _this.setState({\n            modal: !_this.state.modal\n          });\n        }\n\n        _this.setState(_defineProperty({}, \"modal_\".concat(modalType), !_this.state[\"modal_\".concat(modalType)]));\n      };\n    };\n\n    _this.handleChange = function (event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var errors = _this.state.errors;\n\n      switch (name) {\n        case 'first_name':\n          errors.first_name = nameRegex.test(value) && _this.state.value !== '' ? '' : 'Vérifier votre Prénom !';\n          break;\n\n        case 'last_name':\n          errors.last_name = nameRegex.test(value) ? '' : 'Vérifier votre Nom !';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) && _this.isPattern() ? '' : 'Email Non valide ou Email Pattern non valable!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 6 && typeof value !== \"undefined\" ? 'Mot de passe doit contenir au moins 6 caractéres !' : '';\n          break;\n\n        case 'confirmPassword':\n          errors.confirmPassword = value === _this.state.password ? '' : 'mot de passe n\\'est pas identique ';\n          break;\n\n        case 'class':\n          errors.class = classRegex.test(value) ? '' : 'Calsse Non Valide : EXP 3A2';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        errors: errors\n      }, name, value));\n    };\n\n    _this.changeAuthState = function (authState) {\n      return function (event) {\n        event.preventDefault();\n\n        _this.props.onChangeAuthState(authState);\n      };\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var newUser = {\n        first_name: _this.state.first_name,\n        last_name: _this.state.last_name,\n        email: _this.state.email,\n        password: _this.state.password,\n        class: _this.state.class\n      };\n      var user = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      if (_this.state.email === \"admin@esprit.tn\") {\n        _this.setState({\n          isAdmin: true\n        });\n\n        localStorage.setItem('role', \"admin\");\n      }\n\n      if (validateForm(_this.state.errors) && (_this.isSignup ? _this.isEmpty() : _this.isEmptyLogin)) {\n        _this.isSignup ? register(newUser).then(function (res) {\n          //this.changeAuthState(STATE_LOGIN)\n          _this.props.history.push(\"/login\");\n        }) : login(user).then(function (res) {\n          if (res) {\n            console.log(localStorage.getItem('admin'));\n            _this.isAdmin ? _this.props.history.push(\"/administration\") : _this.props.history.push(\"/home\");\n          }\n        });\n      } else {\n        console.error('Invalid Form');\n        _this.state.modal = true;\n      }\n    };\n\n    _this.state = {\n      patterns: [],\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      class: '',\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      classValid: false,\n      modal: false,\n      modal_backdrop: false,\n      modal_nested_parent: false,\n      modal_nested: false,\n      backdrop: true,\n      isAdmin: false,\n      errors: {\n        email: '',\n        password: '',\n        class: '',\n        first_name: '',\n        last_name: '',\n        confirmPassword: ''\n      }\n    }; //this.onChange = this.onChange.bind(this)\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AuthForm, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getPatterns().then(function (res) {\n        var patterns = res;\n\n        _this2.setState({\n          patterns: patterns\n        });\n      });\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      if (this.state.first_name !== '' && this.state.last_name !== '' && this.state.email !== '' && this.state.password !== '' && this.state.confirmPassword !== '' && this.state.class !== '') return true;else return false;\n    }\n  }, {\n    key: \"isPattern\",\n    value: function isPattern() {\n      var valid = false;\n      var pattern = this.state.email.substring(this.state.email.indexOf('@'));\n      console.log(pattern);\n      this.state.patterns.forEach(function (pat) {\n        if (pat.name.indexOf(pattern) != -1) valid = true;\n      });\n      return valid; //valid?this.state.errors.email=\"\":this.state.errors.email=\"Email Pattern Non Valide\"\n    }\n  }, {\n    key: \"isEmptyLogin\",\n    value: function isEmptyLogin() {\n      if (this.state.email !== '' && this.state.password !== '') return true;else return false;\n    }\n  }, {\n    key: \"renderButtonText\",\n    value: function renderButtonText() {\n      var buttonText = this.props.buttonText;\n\n      if (!buttonText && this.isLogin) {\n        return 'Connexion';\n      }\n\n      if (!buttonText && this.isSignup) {\n        return 'Inscription';\n      }\n\n      return buttonText;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          showLogo = _this$props.showLogo,\n          firstnameLabel = _this$props.firstnameLabel,\n          firstnameInputProps = _this$props.firstnameInputProps,\n          lastnameLabel = _this$props.lastnameLabel,\n          lastnameInputProps = _this$props.lastnameInputProps,\n          usernameLabel = _this$props.usernameLabel,\n          usernameInputProps = _this$props.usernameInputProps,\n          passwordLabel = _this$props.passwordLabel,\n          passwordInputProps = _this$props.passwordInputProps,\n          confirmPasswordLabel = _this$props.confirmPasswordLabel,\n          confirmPasswordInputProps = _this$props.confirmPasswordInputProps,\n          classLabel = _this$props.classLabel,\n          classInputProps = _this$props.classInputProps,\n          children = _this$props.children,\n          onLogoClick = _this$props.onLogoClick;\n      return /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      }, showLogo && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo200Image,\n        className: \"rounded\",\n        style: {\n          width: 60,\n          height: 60,\n          cursor: 'pointer'\n        },\n        alt: \"logo\",\n        onClick: onLogoClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: usernameLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, usernameLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Exp@email.com\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }), this.state.errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }, this.state.errors.email)), /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: passwordLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }\n      }, passwordLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Votre Mot de passe\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }), this.state.errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, this.state.errors.password)), this.isSignup && /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: confirmPasswordLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, confirmPasswordLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirmer Votre mot de passe\",\n        value: this.state.confirmPassword,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }), this.state.errors.confirmPassword.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, this.state.errors.confirmPassword)), this.isSignup && /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: firstnameLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, firstnameLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"first_name\",\n        placeholder: \" Votre Pr\\xE9nom\",\n        value: this.state.first_name,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }), this.state.errors.first_name.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }, this.state.errors.first_name)), this.isSignup && /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: lastnameLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, lastnameLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"last_name\",\n        placeholder: \" Votre Nom\",\n        value: this.state.last_name,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }), this.state.errors.last_name.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }, this.state.errors.last_name)), this.isSignup && /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: classLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, classLabel), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"class\",\n        placeholder: \"Votre Classe \",\n        value: this.state.class,\n        onChange: this.handleChange,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }), this.state.errors.class.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      }, this.state.errors.class)), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        size: \"lg\",\n        className: \"bg-gradient-theme-left border-0\",\n        block: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }\n      }, this.renderButtonText()), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle(),\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, \"Avertissement\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, \"Formulaire invalid\"), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 23\n        }\n      }, \"OK\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center pt-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }, \"Ou\"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, this.isSignup ? /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#login\",\n        onClick: this.changeAuthState(STATE_LOGIN),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, \"Connexion\") : /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#signup\",\n        onClick: this.changeAuthState(STATE_SIGNUP),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }\n      }, \"Inscription\"))), children);\n    }\n  }, {\n    key: \"isLogin\",\n    get: function get() {\n      return this.props.authState === STATE_LOGIN;\n    }\n  }, {\n    key: \"isSignup\",\n    get: function get() {\n      return this.props.authState === STATE_SIGNUP;\n    }\n  }, {\n    key: \"isAdmin\",\n    get: function get() {\n      return this.state.isAdmin;\n    }\n  }]);\n\n  return AuthForm;\n}(React.Component);\n\nexport var STATE_LOGIN = 'LOGIN';\nexport var STATE_SIGNUP = 'SIGNUP';\nAuthForm.propTypes = {\n  authState: PropTypes.oneOf([STATE_LOGIN, STATE_SIGNUP]).isRequired,\n  showLogo: PropTypes.bool,\n  usernameLabel: PropTypes.string,\n  usernameInputProps: PropTypes.object,\n  firstnameLabel: PropTypes.string,\n  firstnameInputProps: PropTypes.object,\n  lastnameLabel: PropTypes.string,\n  lastnameInputProps: PropTypes.object,\n  passwordLabel: PropTypes.string,\n  passwordInputProps: PropTypes.object,\n  confirmPasswordLabel: PropTypes.string,\n  confirmPasswordInputProps: PropTypes.object,\n  classLabel: PropTypes.string,\n  classInputProps: PropTypes.object,\n  onLogoClick: PropTypes.func\n};\nAuthForm.defaultProps = {\n  authState: 'LOGIN',\n  showLogo: true,\n  firstnameLabel: 'Prénom',\n  firstnameInputProps: {\n    type: 'text',\n    placeholder: 'Votre Prénom'\n  },\n  lastnameLabel: 'Nom',\n  lastnameInputProps: {\n    type: 'text',\n    placeholder: 'Votre Nom'\n  },\n  usernameLabel: 'Email',\n  usernameInputProps: {\n    type: 'email',\n    placeholder: 'your@email.com'\n  },\n  passwordLabel: 'Mot de passe',\n  passwordInputProps: {\n    type: 'password',\n    placeholder: 'Votre mot de passe'\n  },\n  confirmPasswordLabel: 'Confirmer Mot de passe',\n  confirmPasswordInputProps: {\n    type: 'password',\n    placeholder: 'Confirmer Votre mot de passe'\n  },\n  classLabel: 'Classe',\n  classInputProps: {\n    type: 'text',\n    placeholder: 'Votre Classe (exp 1A1)'\n  },\n  onLogoClick: function onLogoClick() {}\n};\nexport default withRouter(AuthForm);","map":{"version":3,"sources":["C:/Users/yosrj/Desktop/IOT_Lab/react-reduction/src/components/AuthForm.js"],"names":["logo200Image","PropTypes","React","Button","Form","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","register","login","getRole","getState","getPatterns","withRouter","jwt_decode","validEmailRegex","RegExp","classRegex","nameRegex","validateForm","errors","valid","Object","values","forEach","val","length","AuthForm","toggle","modalType","setState","modal","state","handleChange","event","preventDefault","target","name","value","first_name","test","last_name","email","isPattern","password","confirmPassword","class","changeAuthState","authState","props","onChangeAuthState","handleSubmit","newUser","user","isAdmin","localStorage","setItem","isSignup","isEmpty","isEmptyLogin","then","res","history","push","console","log","getItem","error","patterns","emailValid","passwordValid","formValid","classValid","modal_backdrop","modal_nested_parent","modal_nested","backdrop","bind","e","pattern","substring","indexOf","pat","buttonText","isLogin","showLogo","firstnameLabel","firstnameInputProps","lastnameLabel","lastnameInputProps","usernameLabel","usernameInputProps","passwordLabel","passwordInputProps","confirmPasswordLabel","confirmPasswordInputProps","classLabel","classInputProps","children","onLogoClick","width","height","cursor","fontSize","color","renderButtonText","className","STATE_LOGIN","STATE_SIGNUP","Component","propTypes","oneOf","isRequired","bool","string","object","func","defaultProps","type","placeholder"],"mappings":"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","sourcesContent":["import logo200Image from 'assets/img/logo/logo_200.png';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label,  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader, } from 'reactstrap';\r\nimport { register } from './UserFunctions';\r\nimport { login, getRole, getState,getPatterns } from './UserFunctions';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport jwt_decode from 'jwt-decode';\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\nconst classRegex = RegExp(/^[1-5]{1}[a-zA-Z]+[1-9]*$/i);\r\nconst nameRegex = RegExp(/^[a-zA-Z]+$/i);\r\nconst validateForm = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach(\r\n    (val) => val.length > 0 && (valid = false)\r\n  );\r\n  return valid;\r\n}\r\nclass AuthForm extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      patterns: [],\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      class: '',\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      formValid: false,\r\n      classValid: false,\r\n      modal: false,\r\n      modal_backdrop: false,\r\n      modal_nested_parent: false,\r\n      modal_nested: false,\r\n      backdrop: true,\r\n      isAdmin:false,\r\n      errors: {\r\n        email: '',\r\n        password: '',\r\n        class: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        confirmPassword:'',\r\n      },\r\n    }\r\n\r\n    //this.onChange = this.onChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  get isLogin() {\r\n    return this.props.authState === STATE_LOGIN;\r\n  }\r\n\r\n  get isSignup() {\r\n    return this.props.authState === STATE_SIGNUP;\r\n  }\r\n  get isAdmin() {\r\n    return this.state.isAdmin;\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n  toggle = modalType => () => {\r\n    if (!modalType) {\r\n      return this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    }\r\n    this.setState({\r\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    getPatterns()\r\n      .then(res => {\r\n        const patterns = res;\r\n        this.setState({ patterns });\r\n      })\r\n\r\n  }\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n\r\n    switch (name) {\r\n      case 'first_name': \r\n        errors.first_name = \r\n        nameRegex.test(value)&& this.state.value!==''\r\n            ? ''\r\n            : 'Vérifier votre Prénom !';\r\n        break;\r\n        case 'last_name': \r\n        errors.last_name = \r\n        nameRegex.test(value)\r\n            ? ''\r\n            : 'Vérifier votre Nom !';\r\n        break;\r\n      case 'email': \r\n        errors.email = \r\n          validEmailRegex.test(value)&&(this.isPattern())\r\n            ? ''\r\n            : 'Email Non valide ou Email Pattern non valable!';\r\n        break;\r\n      case 'password': \r\n        errors.password = \r\n          (value.length < 6)&&(typeof value !== \"undefined\")\r\n            ? 'Mot de passe doit contenir au moins 6 caractéres !'\r\n            : '';\r\n        break;\r\n        case 'confirmPassword': \r\n        errors.confirmPassword = \r\n          (value===this.state.password)\r\n            ? ''\r\n            : 'mot de passe n\\'est pas identique ';\r\n        break;\r\n        case 'class': \r\n        errors.class = \r\n          classRegex.test(value)\r\n            ? ''\r\n            : 'Calsse Non Valide : EXP 3A2';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({errors, [name]: value});\r\n  }\r\n  changeAuthState = authState => event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onChangeAuthState(authState);\r\n  };\r\n  isEmpty()\r\n{ \r\n  if(this.state.first_name!==''&&this.state.last_name!==''&&this.state.email!==''&&this.state.password!==''\r\n  &&this.state.confirmPassword!==''&&this.state.class!=='')\r\n   return true\r\n   else\r\n   return false\r\n}\r\nisPattern()\r\n{ let valid=false;\r\n  let pattern=this.state.email.substring(this.state.email.indexOf('@'));\r\n  console.log(pattern)\r\n  this.state.patterns.forEach(pat => {\r\n    if(pat.name.indexOf(pattern)!=-1)\r\n    valid=true\r\n  }\r\n   )\r\n   return valid\r\n   //valid?this.state.errors.email=\"\":this.state.errors.email=\"Email Pattern Non Valide\"\r\n}\r\nisEmptyLogin()\r\n{ \r\n  if(this.state.email!==''&&this.state.password!=='')\r\n   return true\r\n   else\r\n   return false\r\n}\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const newUser = {\r\n      first_name: this.state.first_name,\r\n      last_name: this.state.last_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      class: this.state.class\r\n    }\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    }\r\nif(this.state.email===\"admin@esprit.tn\")\r\n{\r\n  this.setState({isAdmin:true})\r\n  localStorage.setItem('role',\"admin\")\r\n}\r\n    if(validateForm(this.state.errors)&& (this.isSignup ? this.isEmpty():this.isEmptyLogin) )\r\n    {\r\n      this.isSignup ? register(newUser).then(res => {\r\n        //this.changeAuthState(STATE_LOGIN)\r\n        this.props.history.push(`/login`)\r\n      }) : login(user).then(res => {\r\n       \r\n       \r\n        if (res) {\r\n\r\n          console.log(localStorage.getItem('admin'))\r\n          this.isAdmin ?this.props.history.push(`/administration`):this.props.history.push(`/home`)\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      console.error('Invalid Form')\r\n       this.state.modal=true\r\n      \r\n    }\r\n\r\n  };\r\n\r\n  renderButtonText() {\r\n    const { buttonText } = this.props;\r\n\r\n    if (!buttonText && this.isLogin) {\r\n      return 'Connexion';\r\n    }\r\n\r\n    if (!buttonText && this.isSignup) {\r\n      return 'Inscription';\r\n    }\r\n\r\n    return buttonText;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      showLogo,\r\n      firstnameLabel,\r\n      firstnameInputProps,\r\n      lastnameLabel,\r\n      lastnameInputProps,\r\n      usernameLabel,\r\n      usernameInputProps,\r\n      passwordLabel,\r\n      passwordInputProps,\r\n      confirmPasswordLabel,\r\n      confirmPasswordInputProps,\r\n      classLabel,\r\n      classInputProps,\r\n      children,\r\n      onLogoClick,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} noValidate>\r\n        {showLogo && (\r\n          <div className=\"text-center pb-4\">\r\n            <img\r\n              src={logo200Image}\r\n              className=\"rounded\"\r\n              style={{ width: 60, height: 60, cursor: 'pointer' }}\r\n              alt=\"logo\"\r\n              onClick={onLogoClick}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <FormGroup>\r\n          <Label for={usernameLabel}>{usernameLabel}</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Exp@email.com\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          noValidate/>\r\n           {this.state.errors.email.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.email}</span>}\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for={passwordLabel}>{passwordLabel}</Label>\r\n          <Input type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Votre Mot de passe\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange} noValidate/>\r\n             {this.state.errors.password.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.password}</span>}\r\n        </FormGroup>\r\n        {this.isSignup && (\r\n          <FormGroup>\r\n            <Label for={confirmPasswordLabel}>{confirmPasswordLabel}</Label>\r\n            <Input type=\"password\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirmer Votre mot de passe\"\r\n              value={this.state.confirmPassword}\r\n            onChange={this.handleChange} noValidate\r\n            />\r\n              {this.state.errors.confirmPassword.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.confirmPassword}</span>}\r\n            \r\n          </FormGroup>\r\n\r\n        )}\r\n        {this.isSignup && (\r\n          <FormGroup>\r\n            <Label for={firstnameLabel}>{firstnameLabel}</Label>\r\n            <Input type=\"text\"\r\n              name=\"first_name\"\r\n              placeholder=\" Votre Prénom\"\r\n              value={this.state.first_name}\r\n              onChange={this.handleChange} noValidate />\r\n               {this.state.errors.first_name.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.first_name}</span>}\r\n          </FormGroup>\r\n        )}\r\n        {this.isSignup && (\r\n          <FormGroup>\r\n            <Label for={lastnameLabel}>{lastnameLabel}</Label>\r\n            <Input type=\"text\"\r\n              name=\"last_name\"\r\n              placeholder=\" Votre Nom\"\r\n              value={this.state.last_name}\r\n              onChange={this.handleChange} noValidate/>\r\n               {this.state.errors.last_name.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.last_name}</span>}\r\n          </FormGroup>\r\n\r\n\r\n        )}\r\n        {this.isSignup && (\r\n          <FormGroup>\r\n            <Label for={classLabel}>{classLabel}</Label>\r\n            <Input type=\"text\"\r\n              name=\"class\"\r\n              placeholder=\"Votre Classe \"\r\n              value={this.state.class}\r\n              onChange={this.handleChange} noValidate/>\r\n               {this.state.errors.class.length > 0 && \r\n                <span style={{ fontSize: 12, color: \"red\" }}>{this.state.errors.class}</span>}\r\n          </FormGroup>\r\n\r\n        )}\r\n        <hr />\r\n        <Button\r\n          size=\"lg\"\r\n          className=\"bg-gradient-theme-left border-0\"\r\n          block>\r\n          {this.renderButtonText()}\r\n        </Button>\r\n        <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle()}\r\n                    className={this.props.className}>\r\n                    <ModalHeader toggle={this.toggle()}>Avertissement</ModalHeader>\r\n                    <ModalBody>\r\n                      Formulaire invalid\r\n                  </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button color=\"primary\" onClick={this.toggle()}>\r\n                        OK\r\n                    </Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n        <div className=\"text-center pt-1\">\r\n          <h6>Ou</h6>\r\n          <h6>\r\n            {this.isSignup ? (\r\n              <a href=\"#login\" onClick={this.changeAuthState(STATE_LOGIN)}>\r\n                Connexion\r\n              </a>\r\n            ) : (\r\n                <a href=\"#signup\" onClick={this.changeAuthState(STATE_SIGNUP)}>\r\n                  Inscription\r\n                </a>\r\n              )}\r\n          </h6>\r\n        </div>\r\n\r\n        {children}\r\n      </Form>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport const STATE_LOGIN = 'LOGIN';\r\nexport const STATE_SIGNUP = 'SIGNUP';\r\n\r\n\r\n\r\nAuthForm.propTypes = {\r\n  authState: PropTypes.oneOf([STATE_LOGIN, STATE_SIGNUP]).isRequired,\r\n  showLogo: PropTypes.bool,\r\n  usernameLabel: PropTypes.string,\r\n  usernameInputProps: PropTypes.object,\r\n  firstnameLabel: PropTypes.string,\r\n  firstnameInputProps: PropTypes.object,\r\n  lastnameLabel: PropTypes.string,\r\n  lastnameInputProps: PropTypes.object,\r\n  passwordLabel: PropTypes.string,\r\n  passwordInputProps: PropTypes.object,\r\n  confirmPasswordLabel: PropTypes.string,\r\n  confirmPasswordInputProps: PropTypes.object,\r\n  classLabel: PropTypes.string,\r\n  classInputProps: PropTypes.object,\r\n  onLogoClick: PropTypes.func,\r\n};\r\n\r\nAuthForm.defaultProps = {\r\n  authState: 'LOGIN',\r\n  showLogo: true,\r\n  firstnameLabel: 'Prénom',\r\n  firstnameInputProps: {\r\n    type: 'text',\r\n    placeholder: 'Votre Prénom',\r\n\r\n  },\r\n  lastnameLabel: 'Nom',\r\n  lastnameInputProps: {\r\n    type: 'text',\r\n    placeholder: 'Votre Nom',\r\n  },\r\n  usernameLabel: 'Email',\r\n  usernameInputProps: {\r\n    type: 'email',\r\n    placeholder: 'your@email.com',\r\n  },\r\n  passwordLabel: 'Mot de passe',\r\n  passwordInputProps: {\r\n    type: 'password',\r\n    placeholder: 'Votre mot de passe',\r\n  },\r\n  confirmPasswordLabel: 'Confirmer Mot de passe',\r\n  confirmPasswordInputProps: {\r\n    type: 'password',\r\n    placeholder: 'Confirmer Votre mot de passe',\r\n  },\r\n  classLabel: 'Classe',\r\n  classInputProps: {\r\n    type: 'text',\r\n    placeholder: 'Votre Classe (exp 1A1)',\r\n  },\r\n  onLogoClick: () => { },\r\n};\r\n\r\n\r\nexport default withRouter(AuthForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}