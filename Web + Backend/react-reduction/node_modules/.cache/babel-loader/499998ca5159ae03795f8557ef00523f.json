{"ast":null,"code":"'use strict';\n\nvar KillCursor = require('../connection/commands').KillCursor;\n\nvar MongoError = require('../error').MongoError;\n\nvar MongoNetworkError = require('../error').MongoNetworkError;\n\nvar collectionNamespace = require('./shared').collectionNamespace;\n\nvar maxWireVersion = require('../utils').maxWireVersion;\n\nvar command = require('./command');\n\nfunction killCursors(server, ns, cursorState, callback) {\n  callback = typeof callback === 'function' ? callback : function () {};\n  var cursorId = cursorState.cursorId;\n\n  if (maxWireVersion(server) < 4) {\n    var bson = server.s.bson;\n    var pool = server.s.pool;\n    var killCursor = new KillCursor(bson, ns, [cursorId]);\n    var _options = {\n      immediateRelease: true,\n      noResponse: true\n    };\n\n    if (typeof cursorState.session === 'object') {\n      _options.session = cursorState.session;\n    }\n\n    if (pool && pool.isConnected()) {\n      try {\n        pool.write(killCursor, _options, callback);\n      } catch (err) {\n        if (typeof callback === 'function') {\n          callback(err, null);\n        } else {\n          console.warn(err);\n        }\n      }\n    }\n\n    return;\n  }\n\n  var killCursorCmd = {\n    killCursors: collectionNamespace(ns),\n    cursors: [cursorId]\n  };\n  var options = {};\n  if (typeof cursorState.session === 'object') options.session = cursorState.session;\n  command(server, ns, killCursorCmd, options, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    var response = result.message;\n\n    if (response.cursorNotFound) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(response.documents) || response.documents.length === 0) {\n      return callback(new MongoError(\"invalid killCursors result returned for cursor id \".concat(cursorId)));\n    }\n\n    callback(null, response.documents[0]);\n  });\n}\n\nmodule.exports = killCursors;","map":null,"metadata":{},"sourceType":"script"}