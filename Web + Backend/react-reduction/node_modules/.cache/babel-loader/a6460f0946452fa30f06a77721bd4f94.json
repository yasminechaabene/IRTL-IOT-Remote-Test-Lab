{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar OperationBase = require('./operation').OperationBase;\n\nvar handleCallback = require('../utils').handleCallback;\n\nvar MongoError = require('../core').MongoError;\n\nvar OptionsOperation = /*#__PURE__*/function (_OperationBase) {\n  _inherits(OptionsOperation, _OperationBase);\n\n  function OptionsOperation(collection, options) {\n    var _this;\n\n    _classCallCheck(this, OptionsOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptionsOperation).call(this, options));\n    _this.collection = collection;\n    return _this;\n  }\n\n  _createClass(OptionsOperation, [{\n    key: \"execute\",\n    value: function execute(callback) {\n      var coll = this.collection;\n      var opts = this.options;\n      coll.s.db.listCollections({\n        name: coll.collectionName\n      }, opts).toArray(function (err, collections) {\n        if (err) return handleCallback(callback, err);\n\n        if (collections.length === 0) {\n          return handleCallback(callback, MongoError.create({\n            message: \"collection \".concat(coll.namespace, \" not found\"),\n            driver: true\n          }));\n        }\n\n        handleCallback(callback, err, collections[0].options || null);\n      });\n    }\n  }]);\n\n  return OptionsOperation;\n}(OperationBase);\n\nmodule.exports = OptionsOperation;","map":null,"metadata":{},"sourceType":"script"}