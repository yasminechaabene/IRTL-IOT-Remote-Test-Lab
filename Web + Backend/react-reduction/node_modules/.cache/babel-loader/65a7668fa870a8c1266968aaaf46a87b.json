{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar CommandOperationV2 = require('./command_v2');\n\nvar Aspect = require('./operation').Aspect;\n\nvar defineAspects = require('./operation').defineAspects;\n\nvar MongoDBNamespace = require('../utils').MongoDBNamespace;\n\nvar ListDatabasesOperation = /*#__PURE__*/function (_CommandOperationV) {\n  _inherits(ListDatabasesOperation, _CommandOperationV);\n\n  function ListDatabasesOperation(db, options) {\n    var _this;\n\n    _classCallCheck(this, ListDatabasesOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListDatabasesOperation).call(this, db, options));\n    _this.ns = new MongoDBNamespace('admin', '$cmd');\n    return _this;\n  }\n\n  _createClass(ListDatabasesOperation, [{\n    key: \"execute\",\n    value: function execute(server, callback) {\n      var cmd = {\n        listDatabases: 1\n      };\n\n      if (this.options.nameOnly) {\n        cmd.nameOnly = Number(cmd.nameOnly);\n      }\n\n      if (this.options.filter) {\n        cmd.filter = this.options.filter;\n      }\n\n      if (typeof this.options.authorizedDatabases === 'boolean') {\n        cmd.authorizedDatabases = this.options.authorizedDatabases;\n      }\n\n      _get(_getPrototypeOf(ListDatabasesOperation.prototype), \"executeCommand\", this).call(this, server, cmd, callback);\n    }\n  }]);\n\n  return ListDatabasesOperation;\n}(CommandOperationV2);\n\ndefineAspects(ListDatabasesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ListDatabasesOperation;","map":null,"metadata":{},"sourceType":"script"}