{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\yosrj\\\\Desktop\\\\IOT_Lab\\\\react-reduction\\\\src\\\\components\\\\Layout\\\\Header.js\";\nimport Avatar from 'components/Avatar';\nimport { UserCard } from 'components/Card';\nimport Notifications from 'components/Notifications';\nimport user1Image from 'assets/img/users/100_1.jpg';\nimport SearchInput from 'components/SearchInput'; //import { notificationsData } from 'demos/header';\n\nimport withBadge from 'hocs/withBadge';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { getMyResponses } from 'components/UserFunctions';\nimport axios from 'axios';\nimport moment from 'moment';\nimport classnames from \"classnames\";\nimport { MdClearAll, MdExitToApp, MdKeyboardArrowDown, MdHelp, MdInsertChart, MdMessage, MdExtension, MdNotificationsActive, MdNotificationsNone, MdPersonPin, MdSettingsApplications, MdRadioButtonChecked, MdChromeReaderMode } from 'react-icons/md';\nimport { ListGroup, ListGroupItem // NavbarToggler,\n, Nav, Navbar, NavItem, NavLink, Popover, PopoverBody, Button, Collapse, NavbarBrand, Container, NavLink as BSNavLink } from 'reactstrap';\nimport bn from 'utils/bemnames';\nvar notif = localStorage.getItem(\"notif\");\nvar bem = bn.create('header');\nvar navComponents = [{\n  to: '/cards',\n  name: 'consulter les cartes',\n  exact: false,\n  Icon: MdRadioButtonChecked\n}, {\n  to: '/reservation',\n  name: 'reservation',\n  exact: false,\n  Icon: MdChromeReaderMode\n}];\nvar MdMessageWithBadge = withBadge({\n  size: 'md',\n  color: 'primary',\n  style: {\n    top: -10,\n    right: -10,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  children: /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, notif)\n})(MdMessage);\n\nfunction IndexNavbar() {\n  var _React$useState = React.useState(\"navbar-transparent\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      navbarColor = _React$useState2[0],\n      setNavbarColor = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      navbarCollapse = _React$useState4[0],\n      setNavbarCollapse = _React$useState4[1];\n\n  var toggleNavbarCollapse = function toggleNavbarCollapse() {\n    setNavbarCollapse(!navbarCollapse);\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n\n  React.useEffect(function () {\n    var updateNavbarColor = function updateNavbarColor() {\n      if (document.documentElement.scrollTop > 299 || document.body.scrollTop > 299) {\n        setNavbarColor(\"\");\n      } else if (document.documentElement.scrollTop < 300 || document.body.scrollTop < 300) {\n        setNavbarColor(\"navbar-transparent\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateNavbarColor);\n    return function cleanup() {\n      window.removeEventListener(\"scroll\", updateNavbarColor);\n    };\n  });\n\n  var Header = /*#__PURE__*/function (_React$Component) {\n    _inherits(Header, _React$Component);\n\n    function Header() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, Header);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isOpenNotificationPopover: false,\n        isNotificationConfirmed: false,\n        isOpenUserCardPopover: false,\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        profileImg: '',\n        userId: '',\n        data: [],\n        notificationsData: [],\n        errors: {}\n      };\n\n      _this.isUser = function () {\n        var user = false; // console.log(localStorage.getItem('role'))\n\n        if (localStorage.getItem('role') === 'user') user = true;\n        return user;\n      };\n\n      _this.toggleNotificationPopover = function () {\n        _this.setState({\n          isOpenNotificationPopover: !_this.state.isOpenNotificationPopover\n        });\n\n        if (!_this.state.isNotificationConfirmed) {\n          _this.setState({\n            isNotificationConfirmed: true\n          });\n        }\n      };\n\n      _this.toggleUserCardPopover = function () {\n        _this.setState({\n          isOpenUserCardPopover: !_this.state.isOpenUserCardPopover\n        });\n      };\n\n      _this.handleSidebarControlButton = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n        document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n      };\n\n      return _this;\n    }\n\n    _createClass(Header, [{\n      key: \"checkDate\",\n      value: function checkDate(duration) {\n        if (duration.hours() == 0 && duration.days() == 0) return duration.minutes() + \" M\";else if (duration.days() == 0) return duration.hours() + \" H\";else return duration.days() + \" J\";\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var token = localStorage.usertoken;\n        var decoded = jwt_decode(token);\n        this.setState({\n          userId: decoded._id,\n          first_name: decoded.first_name,\n          last_name: decoded.last_name,\n          email: decoded.email,\n          password: decoded.password,\n          profileImg: decoded.profileImg\n        });\n        var user = decoded._id;\n        axios.get(\"/responses/getMyResponses/\".concat(user)).then(function (res) {\n          var data = res.data.responses;\n\n          _this2.setState({\n            data: res.data.responses\n          });\n\n          localStorage.setItem(\"notif\", _this2.state.data.length);\n          console.log(_this2.state.data);\n\n          _this2.state.data.forEach(function (e) {\n            var diff = moment(new Date()).diff(moment(e.date));\n            var object = {\n              _id: e._id,\n              description: e.description,\n              dateRes: e.date,\n              id: data.indexOf(e) + 1,\n              avatar: user1Image,\n              message: e.name,\n              date: \"Il y a\" + _this2.checkDate(moment.duration(diff))\n            };\n\n            _this2.state.notificationsData.push(object);\n\n            console.log(_this2.state.notificationsData); //localStorage.setItem(\"notif\",this.state.notificationsData.length)\n          });\n        });\n        this.MdNotificationsActiveWithBadge = withBadge({\n          size: 'md',\n          color: 'primary',\n          style: {\n            top: -10,\n            right: -10,\n            display: 'inline-flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/React.createElement(\"small\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }\n          }, this.state.notificationsData.length)\n        })(MdNotificationsActive); // console.log(user)\n        // console.log(this.state.data)\n      }\n    }, {\n      key: \"logOut\",\n      value: function logOut(e) {\n        e.preventDefault(); // localStorage.removeItem('usertoken')\n        // localStorage.removeItem('admin')\n        // localStorage.removeItem('state')\n\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var isNotificationConfirmed = this.state.isNotificationConfirmed;\n        return /*#__PURE__*/React.createElement(Navbar, {\n          className: classnames(\"fixed-top\", navbarColor),\n          expand: \"lg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Nav, {\n          navbar: true,\n          className: bem.e('nav-right'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 9\n          }\n        }, this.isUser() && /*#__PURE__*/React.createElement(NavItem, {\n          className: \"d-inline-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          id: \"Popover1\",\n          className: \"position-relative\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }\n        }, isNotificationConfirmed ? /*#__PURE__*/React.createElement(MdMessage, {\n          size: 25,\n          className: \"text-secondary can-click\",\n          onClick: this.toggleNotificationPopover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }\n        }) : /*#__PURE__*/React.createElement(MdMessageWithBadge, {\n          size: 25,\n          className: \"text-secondary can-click animated swing infinite\",\n          onClick: this.toggleNotificationPopover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Popover, {\n          placement: \"bottom\",\n          isOpen: this.state.isOpenNotificationPopover,\n          toggle: this.toggleNotificationPopover,\n          target: \"Popover1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(PopoverBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }\n        }, this.state.notificationsData.length > 0 ? /*#__PURE__*/React.createElement(Notifications, {\n          notificationsData: this.state.notificationsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }\n        }) : /*#__PURE__*/React.createElement(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }, \"Pas de nouveau message\")))), /*#__PURE__*/React.createElement(NavItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          id: \"Popover2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Avatar, {\n          onClick: this.toggleUserCardPopover,\n          className: \"can-click\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Popover, {\n          placement: \"bottom-end\",\n          isOpen: this.state.isOpenUserCardPopover,\n          toggle: this.toggleUserCardPopover,\n          target: \"Popover2\",\n          className: \"p-0 border-0\",\n          style: {\n            minWidth: 250\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PopoverBody, {\n          className: \"p-0 border-light\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(UserCard, {\n          title: this.state.first_name,\n          subtitle: this.state.email // text=\"Last updated 3 mins ago\"\n          ,\n          className: \"border-light\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ListGroup, {\n          flush: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/profile\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          className: \"border-light\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(MdPersonPin, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }\n        }), \" Profil\")), /*#__PURE__*/React.createElement(ListGroupItem, {\n          tag: \"button\",\n          action: true,\n          className: \"border-light\",\n          onClick: this.logOut.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MdExitToApp, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 23\n          }\n        }), \" D\\xE9connexion\")))))))));\n      }\n    }]);\n\n    return Header;\n  }(React.Component);\n}\n\nexport default withRouter(Header);","map":{"version":3,"sources":["C:/Users/yosrj/Desktop/IOT_Lab/react-reduction/src/components/Layout/Header.js"],"names":["Avatar","UserCard","Notifications","user1Image","SearchInput","withBadge","React","Link","withRouter","jwt_decode","getMyResponses","axios","moment","classnames","MdClearAll","MdExitToApp","MdKeyboardArrowDown","MdHelp","MdInsertChart","MdMessage","MdExtension","MdNotificationsActive","MdNotificationsNone","MdPersonPin","MdSettingsApplications","MdRadioButtonChecked","MdChromeReaderMode","ListGroup","ListGroupItem","Nav","Navbar","NavItem","NavLink","Popover","PopoverBody","Button","Collapse","NavbarBrand","Container","BSNavLink","bn","notif","localStorage","getItem","bem","create","navComponents","to","name","exact","Icon","MdMessageWithBadge","size","color","style","top","right","display","justifyContent","alignItems","children","IndexNavbar","useState","navbarColor","setNavbarColor","navbarCollapse","setNavbarCollapse","toggleNavbarCollapse","document","documentElement","classList","toggle","useEffect","updateNavbarColor","scrollTop","body","window","addEventListener","cleanup","removeEventListener","Header","state","isOpenNotificationPopover","isNotificationConfirmed","isOpenUserCardPopover","first_name","last_name","email","password","profileImg","userId","data","notificationsData","errors","isUser","user","toggleNotificationPopover","setState","toggleUserCardPopover","handleSidebarControlButton","event","preventDefault","stopPropagation","querySelector","duration","hours","days","minutes","token","usertoken","decoded","_id","get","then","res","responses","setItem","length","console","log","forEach","e","diff","Date","date","object","description","dateRes","id","indexOf","avatar","message","checkDate","push","MdNotificationsActiveWithBadge","clear","props","history","minWidth","logOut","bind","Component"],"mappings":"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","sourcesContent":["import Avatar from 'components/Avatar';\r\nimport { UserCard } from 'components/Card';\r\nimport Notifications from 'components/Notifications';\r\nimport user1Image from 'assets/img/users/100_1.jpg';\r\nimport SearchInput from 'components/SearchInput';\r\n//import { notificationsData } from 'demos/header';\r\nimport withBadge from 'hocs/withBadge';\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { getMyResponses } from 'components/UserFunctions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport classnames from \"classnames\";\r\nimport {\r\n  MdClearAll,\r\n  MdExitToApp,\r\n  MdKeyboardArrowDown,\r\n  MdHelp,\r\n  MdInsertChart,\r\n  MdMessage,\r\n  MdExtension,\r\n  MdNotificationsActive,\r\n  MdNotificationsNone,\r\n  MdPersonPin,\r\n  MdSettingsApplications,\r\n  MdRadioButtonChecked,\r\n  MdChromeReaderMode,\r\n} from 'react-icons/md';\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  // NavbarToggler,\r\n  Nav,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Popover,\r\n  PopoverBody,\r\n  Button,\r\n  Collapse,\r\n  NavbarBrand,\r\n  Container,\r\n  NavLink as BSNavLink,\r\n} from 'reactstrap';\r\nimport bn from 'utils/bemnames';\r\nconst notif =localStorage.getItem(\"notif\")\r\nconst bem = bn.create('header');\r\nconst navComponents = [\r\n  { to: '/cards', name: 'consulter les cartes', exact: false, Icon: MdRadioButtonChecked },\r\n\r\n  { to: '/reservation', name: 'reservation', exact: false, Icon: MdChromeReaderMode },\r\n];\r\nconst MdMessageWithBadge = withBadge({\r\n  size: 'md',\r\n  color: 'primary',\r\n  style: {\r\n    top: -10,\r\n    right: -10,\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\nchildren: <small>{notif}</small>,\r\n})(MdMessage);\r\nfunction IndexNavbar() {\r\n  const [navbarColor, setNavbarColor] = React.useState(\"navbar-transparent\");\r\n  const [navbarCollapse, setNavbarCollapse] = React.useState(false);\r\n\r\n  const toggleNavbarCollapse = () => {\r\n    setNavbarCollapse(!navbarCollapse);\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > 299 ||\r\n        document.body.scrollTop > 299\r\n      ) {\r\n        setNavbarColor(\"\");\r\n      } else if (\r\n        document.documentElement.scrollTop < 300 ||\r\n        document.body.scrollTop < 300\r\n      ) {\r\n        setNavbarColor(\"navbar-transparent\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", updateNavbarColor);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor);\r\n    };\r\n  });\r\nclass Header extends React.Component {\r\n  state = {\r\n    isOpenNotificationPopover: false,\r\n    isNotificationConfirmed: false,\r\n    isOpenUserCardPopover: false,\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    password: '',\r\n    profileImg: '',\r\n    userId: '',\r\n    data: [],\r\n    notificationsData: [],\r\n    errors: {}\r\n  };\r\n  checkDate(duration) {\r\n    if (duration.hours() == 0 && duration.days() == 0)\r\n      return duration.minutes() + \" M\"\r\n    else if (duration.days() == 0)\r\n      return duration.hours() + \" H\"\r\n    else\r\n      return duration.days() + \" J\"\r\n\r\n\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    const token = localStorage.usertoken\r\n    const decoded = jwt_decode(token)\r\n    this.setState({\r\n      userId: decoded._id,\r\n      first_name: decoded.first_name,\r\n      last_name: decoded.last_name,\r\n      email: decoded.email,\r\n      password: decoded.password,\r\n      profileImg: decoded.profileImg\r\n\r\n    })\r\n    let user = decoded._id\r\n    axios.get(`/responses/getMyResponses/${user}`)\r\n      .then(res => {\r\n        const data = res.data.responses;\r\n        this.setState({ data: res.data.responses });\r\n        localStorage.setItem(\"notif\",this.state.data.length)\r\n        console.log(this.state.data)\r\n        this.state.data.forEach(e => {\r\n          let diff = moment(new Date()).diff(moment(e.date))\r\n          const object = {\r\n            _id: e._id,\r\n            description: e.description,\r\n            dateRes: e.date,\r\n            id: data.indexOf(e) + 1,\r\n            avatar: user1Image,\r\n            message: e.name,\r\n            date: \"Il y a\" + this.checkDate(moment.duration(diff)),\r\n          }\r\n          this.state.notificationsData.push(object)\r\n          console.log(this.state.notificationsData)\r\n          //localStorage.setItem(\"notif\",this.state.notificationsData.length)\r\n        })\r\n\r\n      })\r\n     this. MdNotificationsActiveWithBadge = withBadge({\r\n        size: 'md',\r\n        color: 'primary',\r\n        style: {\r\n          top: -10,\r\n          right: -10,\r\n          display: 'inline-flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        },\r\n      children: <small>{this.state.notificationsData.length}</small>,\r\n      })(MdNotificationsActive);\r\n    // console.log(user)\r\n    // console.log(this.state.data)\r\n\r\n  }\r\n  isUser = () => {\r\n    let user = false\r\n    // console.log(localStorage.getItem('role'))\r\n    if (localStorage.getItem('role') === 'user')\r\n      user = true\r\n    return user;\r\n  };\r\n  logOut(e) {\r\n    e.preventDefault()\r\n    // localStorage.removeItem('usertoken')\r\n    // localStorage.removeItem('admin')\r\n    // localStorage.removeItem('state')\r\n    localStorage.clear()\r\n    this.props.history.push(`/login`)\r\n  }\r\n  toggleNotificationPopover = () => {\r\n    this.setState({\r\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\r\n    });\r\n\r\n    if (!this.state.isNotificationConfirmed) {\r\n      this.setState({ isNotificationConfirmed: true });\r\n    }\r\n  };\r\n\r\n  toggleUserCardPopover = () => {\r\n    this.setState({\r\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\r\n    });\r\n  };\r\n\r\n  handleSidebarControlButton = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\r\n  };\r\n\r\n  render() {\r\n    const { isNotificationConfirmed } = this.state;\r\n\r\n    return (\r\n      <Navbar className={classnames(\"fixed-top\", navbarColor)} expand=\"lg\">\r\n      <Container>\r\n     \r\n\r\n        <Nav navbar className={bem.e('nav-right')}>\r\n          {this.isUser() &&\r\n            <NavItem className=\"d-inline-flex\">\r\n              <NavLink id=\"Popover1\" className=\"position-relative\">\r\n                {isNotificationConfirmed ? (\r\n                  <MdMessage\r\n                    size={25}\r\n                    className=\"text-secondary can-click\"\r\n                    onClick={this.toggleNotificationPopover}\r\n                  />\r\n                ) : (\r\n                    <MdMessageWithBadge\r\n                      size={25}\r\n                      className=\"text-secondary can-click animated swing infinite\"\r\n                      onClick={this.toggleNotificationPopover}\r\n                    />\r\n                  )}\r\n              </NavLink>\r\n              <Popover\r\n                placement=\"bottom\"\r\n                isOpen={this.state.isOpenNotificationPopover}\r\n                toggle={this.toggleNotificationPopover}\r\n                target=\"Popover1\"\r\n              >\r\n                <PopoverBody>\r\n                  {this.state.notificationsData.length>0 ?(\r\n                  <Notifications notificationsData={this.state.notificationsData} />):\r\n                  (\r\n                    <Button >Pas de nouveau message</Button>\r\n                  )}\r\n                </PopoverBody>\r\n              </Popover>\r\n            </NavItem>}\r\n\r\n          <NavItem>\r\n            <NavLink id=\"Popover2\">\r\n              <Avatar\r\n                onClick={this.toggleUserCardPopover}\r\n                className=\"can-click\"\r\n              />\r\n            </NavLink>\r\n            <Popover\r\n              placement=\"bottom-end\"\r\n              isOpen={this.state.isOpenUserCardPopover}\r\n              toggle={this.toggleUserCardPopover}\r\n              target=\"Popover2\"\r\n              className=\"p-0 border-0\"\r\n              style={{ minWidth: 250 }}\r\n            >\r\n              <PopoverBody className=\"p-0 border-light\">\r\n                <UserCard\r\n                  title={this.state.first_name}\r\n                  subtitle={this.state.email}\r\n                  // text=\"Last updated 3 mins ago\"\r\n                  className=\"border-light\"\r\n                >\r\n                  <ListGroup flush>\r\n                    <Link to=\"/profile\">\r\n                      <ListGroupItem tag=\"button\" action className=\"border-light\">\r\n                        <MdPersonPin /> Profil\r\n                    </ListGroupItem>\r\n                    </Link>\r\n                    <ListGroupItem tag=\"button\" action className=\"border-light\" onClick={this.logOut.bind(this)}>\r\n                      <MdExitToApp /> Déconnexion\r\n                    </ListGroupItem>\r\n                  </ListGroup>\r\n                </UserCard>\r\n              </PopoverBody>\r\n            </Popover>\r\n          </NavItem>\r\n        </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n}\r\n\r\nexport default withRouter(Header);\r\n"]},"metadata":{},"sourceType":"module"}